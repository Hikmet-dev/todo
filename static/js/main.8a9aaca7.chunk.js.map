{"version":3,"sources":["components/CreateToDo.js","components/Pagination.js","components/ToDoListItem.js","components/DoneSort.js","components/DateSort.js","components/ItemPerPageFilter.js","container/FilterPanel.js","container/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateToDo","onKeyPress","useState","newToDo","setNewToDo","TextField","id","label","variant","size","fullWidth","type","value","onChange","e","target","handleNewToDo","onKeyUp","key","Pagination","onPageNow","pageCount","activePage","pageArr","Array","fill","map","i","ButtonGroup","color","aria-label","Button","onClick","page","length","ToDoListItem","task","onCheck","onDelete","chanher","setChanher","showInput","ListItem","ListItemIcon","Checkbox","checked","done","uuid","Input","defaultValue","name","autoFocus","onBlur","onKeyDown","ListItemText","primary","createdAt","ListItemSecondaryAction","IconButton","edge","DoneSort","doneSort","DateSort","dataSort","fontSize","ItemPerPageFilter","onChangeItemFilter","itemPerPage","Select","labelId","MenuItem","FilterPanel","sortParam","Grid","container","spacing","item","xs","alignItems","Typography","date","instanceToDo","axios","create","baseURL","ToDoList","toDoList","setToDoList","setSortParam","setPageCount","setActivePage","setItemPerPage","isLoading","setIsLoading","getToDoList","useCallback","a","filterOptions","get","params","filterBy","order","data","paginCount","Math","floor","activePagin","sliceStart","sliceEnd","paginator","slice","todolister","useEffect","console","log","createNewToDo","trim","post","changeDoneStatus","patch","changeTask","deleteToDoItem","delete","currentTarget","Container","maxWidth","component","align","pt","param","Number","List","CircularProgress","App","error","setError","open","setOpen","interceptors","response","use","undefined","includes","status","Promise","reject","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a9aaca7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport const  CreateToDo = ({onKeyPress}) =>  {\n    const [newToDo, setNewToDo] = useState('');\n    const handleNewToDo = (e) => {\n        setNewToDo(e.target.value);\n      };\n    return (\n        <TextField \n            id=\"outlined-basic\" \n            label=\"New to do\" \n            variant=\"outlined\" \n            size=\"small\" \n            fullWidth={true} \n            type=\"text\" \n            value={newToDo} \n            onChange={e => handleNewToDo(e)} \n            onKeyPress={onKeyPress} \n            onKeyUp={e => e.key === \"Enter\" && setNewToDo('')} \n        />\n        )\n}\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\n\n\n\nexport const  Pagination = ({onPageNow, pageCount, activePage}) =>  {\n\n    const pageArr = new Array(pageCount).fill(1).map((e, i) => i + 1);\n\n   \n\n    return (\n        <ButtonGroup  color=\"primary\" aria-label=\"contained button group\">            \n            <Button onClick={onPageNow} value=\"1\"><ArrowBackIcon /></Button>\n                {pageArr.map(page => <Button  key={`item-${page}`} onClick={onPageNow} value={page} variant={ activePage === page &&  'contained'}>{page}</Button>)}\n            <Button onClick={onPageNow} value={pageArr.length}><ArrowForwardIcon /> </Button>\n        </ButtonGroup>\n    )\n}","import React, { useState } from 'react';\nimport { ListItemText , ListItem, ListItemIcon, ListItemSecondaryAction, IconButton, Checkbox, Input } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const ToDoListItem = ({task, onCheck, onDelete, onChange}) => {\n  const [chanher, setChanher] = useState(false);\n\n  const showInput = (e) => {\n    setChanher(!chanher)\n  }; \n\n return(\n <ListItem>\n      <ListItemIcon>\n        <Checkbox \n          color=\"primary\"  \n          onChange={onCheck} \n          checked={task.done} \n          value={task.uuid} \n        />\n      </ListItemIcon>\n      {chanher \n        ? (<Input \n            defaultValue={task.name}\n            autoFocus={true}\n            name={`${task.uuid}`}\n            onBlur={e => showInput(e)} \n            onKeyDown={e => e.key === \"Escape\" && setChanher(false)} \n            onKeyPress={onChange}\n            onKeyUp={e => e.key === \"Enter\" && setChanher(false)}\n          />) \n        : (<ListItemText  \n            primary={task.name}  \n            onClick={e => showInput(e)}\n          />)\n      }\n        \n        <ListItemText  primary={task.createdAt} />\n        <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete} value={task.uuid}>\n                      <DeleteIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n    </ListItem>\n   \n )   \n};","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\n\n\nexport default function DoneSort({onChange, doneSort}) {\n\n    return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n    <Button onClick={onChange} variant={ doneSort === \"\" && \"contained\"} value=\"\">All</Button>\n    <Button onClick={onChange} variant={ doneSort === \"true\" && \"contained\"} value=\"true\">Done</Button>\n    <Button onClick={onChange} variant={ doneSort === \"false\" && \"contained\"} value=\"false\" >Undone</Button>\n    </ButtonGroup>\n\n    )\n}\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport default function DateSort({dataSort, onChange}) {\n    return(<>\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n    <Button size=\"medium\" value=\"ascending\" onClick={onChange} variant={ dataSort === \"ascending\" && \"contained\"}><ArrowUpwardIcon fontSize=\"inherit\" /></Button>\n    <Button size=\"medium\" value=\"descending\" onClick={onChange} variant={ dataSort === \"descending\" && \"contained\"}><ArrowDownwardIcon fontSize=\"inherit\" /></Button>\n    </ButtonGroup>  \n      </>\n    );\n};","import React from 'react';\nimport { Select, MenuItem } from \"@material-ui/core\";\n\n\n\nexport const ItemPerPageFilter = ({onChangeItemFilter, itemPerPage}) => {\n    return(\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={itemPerPage}\n          onChange={onChangeItemFilter}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n        </Select>\n    )\n}","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport DoneSort from \"../components/DoneSort\";\nimport DateSort from \"../components/DateSort\";\nimport { ItemPerPageFilter } from '../components/ItemPerPageFilter';\n\nexport const FilterPanel = ({onChange, sortParam, doneSort, onChangeItemFilter, itemPerPage}) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <DoneSort onChange={doneSort} doneSort={sortParam.done} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Sort by:</Typography>\n        <DateSort onChange={onChange} dataSort={sortParam.date} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Page count</Typography>\n        <ItemPerPageFilter  onChangeItemFilter={onChangeItemFilter} itemPerPage={itemPerPage}/>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, {  useState, useEffect, useCallback} from  'react';\n\nimport { Container, Grid, Typography, List, CircularProgress} from '@material-ui/core';\n\nimport { CreateToDo }  from '../components/CreateToDo';\nimport { Pagination } from '../components/Pagination';\nimport { ToDoListItem } from '../components/ToDoListItem';\nimport { FilterPanel } from './FilterPanel';\n\n\nimport axios from 'axios';\n\nconst instanceToDo = axios.create({\n    baseURL: \"https://todo-api-learning.herokuapp.com\"\n})\n \n\n\nexport const ToDoList = () => {\n\n    const [toDoList, setToDoList] = useState([]);\n    const [sortParam, setSortParam] = useState({ done: \"\", date: \"descending\" });\n    const [pageCount, setPageCount] = useState(1);\n    const [activePage, setActivePage] = useState(1);\n    const [itemPerPage, setItemPerPage] = useState(5);\n    const [isLoading, setIsLoading] = useState(false)\n\n\n\n\n    const getToDoList =  useCallback( async () => {\n      \n        const filterOptions = { 'true': 'done', 'false': 'undone' };\n\n        const { data } = await instanceToDo.get('/v1/tasks/6', { \n          params : { \n            filterBy: filterOptions[sortParam.done] ?? '', \n            order : sortParam.date === 'ascending' ? 'asc' : 'desc'   \n          }\n        });\n        \n        const paginator =  (data, activePage, itemPerPage) => {\n          const paginCount =  data.length % itemPerPage\n          ? (Math.floor(data.length / itemPerPage) + 1) \n          : (data.length / itemPerPage);\n          \n          const activePagin =  activePage <= paginCount ? activePage : paginCount;\n          const sliceStart =  (activePagin - 1) * itemPerPage;\n          const sliceEnd =  activePagin * itemPerPage;\n          \n          return {\n            paginCount: paginCount,\n            activePagin : activePagin,\n            sliceStart : sliceStart,\n            sliceEnd : sliceEnd\n          }\n        };\n        \n        const {paginCount, activePagin, sliceStart, sliceEnd} = paginator(data, activePage, itemPerPage);\n        \n    setActivePage(activePagin);\n    setPageCount(paginCount);\n    \n    const todolister = await data.slice(sliceStart, sliceEnd);\n    setToDoList(todolister)\n    \n    await setIsLoading(true);\n\n\n  }, [activePage, itemPerPage, sortParam]);\n  \n  \n  useEffect(() => {\n    \n    getToDoList();\n    \nconsole.log('useEf');\n\n  }, [getToDoList]);\n\n\n  const createNewToDo = async (e) => {\n    if(e.key === \"Enter\" && e.target.value.trim()) {\n      await instanceToDo.post('/v1/task/6', {name: e.target.value.trim(), done: false});\n      getToDoList();\n    };\n  };\n\n  const changeDoneStatus = async (e) => {\n    await instanceToDo.patch(`/v1/task/6/${e.target.value}`, {done: e.target.checked});\n    getToDoList();\n    };\n\n  const changeTask = async (e) => {\n    if (e.key === \"Enter\" && e.target.value.trim()) {\n      await instanceToDo.patch(`/v1/task/6/${e.target.name}`, {name : e.target.value});\n      getToDoList();\n    }; \n  };\n\n  const deleteToDoItem = async (e) => {\n    await instanceToDo.delete(`/v1/task/6/${e.currentTarget.value}`);\n    getToDoList();\n  };\n  \n  const clickOnPage = (e) => {\n    setActivePage(Number(e.currentTarget.value));\n  };\n\n  const changeItemPerPageFilter = (e) => {\n      setItemPerPage(e.target.value)\n  };\n\n  const taskSort = (e) => {\n    setSortParam(param => ({...param, date: e.currentTarget.value}) );\n  };\n\n  const doneSort = (e) => {\n    setSortParam(param => ({...param, done: e.currentTarget.value}) );\n  };\n\n    return(\n        <Container maxWidth=\"md\">\n        <Typography variant=\"h1\" component=\"h2\" align=\"center\">To do list</Typography>\n            <Grid item pt={50}>\n            <CreateToDo onKeyPress={createNewToDo} />\n            </Grid>\n            <FilterPanel \n                onChange={taskSort} \n                sortParam={sortParam} \n                doneSort={doneSort} \n                onChangeItemFilter={changeItemPerPageFilter}\n                itemPerPage={itemPerPage} />\n            <Grid item alignItems=\"center\" container xs={12}>\n                {isLoading && (pageCount > 1 && <Pagination onPageNow={clickOnPage} pageCount={pageCount} activePage={activePage}  />) }\n            </Grid>\n\n            <List>\n\n        {isLoading\n                ?  (toDoList.map(task => <ToDoListItem key={task.uuid} task={task} onCheck={changeDoneStatus} onDelete={deleteToDoItem} onChange={changeTask} />)) \n                :   <CircularProgress />}\n            </List>\n        </Container>\n    );\n};","import React, {  useState } from 'react';\r\n\r\nimport { Container, Snackbar} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { ToDoList } from './container/ToDoList';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const [error, setError] = useState(null)\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  \r\n  \r\n  axios.interceptors.response.use(undefined, (error) =>  {\r\n    if( [422, 404, 400].includes(error.response?.status) ) {\r\n      setError(error)\r\n      setOpen(true);\r\n      console.log(\"erroer\");\r\n    }\r\n    return Promise.reject(error);\r\n\r\n  });\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n    \r\n\r\n  return (\r\n    <Container>\r\n      \r\n      <ToDoList />\r\n\r\n      {error && (<Snackbar open={open} autoHideDuration={6000} onClose={handleClose} >\r\n                              <Alert severity=\"error\" onClose={handleClose} > \r\n                              <AlertTitle>{error.name}</AlertTitle>\r\n                              {error.message} \r\n                              </Alert>\r\n                            </Snackbar>)}\r\n                \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from 'axios';\n\n\naxios.interceptors.request.use(request => {\n  return request;\n}, error =>{\n  return Promise.reject(error);\n});\n\n\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}