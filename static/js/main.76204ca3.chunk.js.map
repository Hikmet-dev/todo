{"version":3,"sources":["components/CreateToDo.js","components/Pagination.js","components/ToDoListItem.js","components/DoneSort.js","components/DateSort.js","components/ItemPerPageFilter.js","container/FilterPanel.js","container/ToDoList.js","components/InputAuth.js","components/LogIn.js","components/SignUp.js","container/Auth.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["CreateToDo","onKeyPress","useState","newToDo","setNewToDo","TextField","id","label","variant","size","fullWidth","type","value","onChange","e","target","handleNewToDo","onKeyUp","key","Pagination","onPageNow","pageCount","activePage","pageArr","Array","fill","map","i","ButtonGroup","color","aria-label","Button","onClick","page","length","ToDoListItem","task","onCheck","onDelete","chanher","setChanher","showInput","ListItem","ListItemIcon","Checkbox","checked","done","Input","defaultValue","name","autoFocus","onBlur","onKeyDown","ListItemText","primary","createdAt","ListItemSecondaryAction","IconButton","edge","DoneSort","doneSort","DateSort","dataSort","fontSize","ItemPerPageFilter","onChangeItemFilter","itemPerPage","Select","labelId","MenuItem","FilterPanel","sortParam","Grid","container","spacing","item","xs","alignItems","Typography","date","instanceToDo","axios","create","baseURL","process","headers","sessionStorage","getItem","ToDoList","token","toDoList","setToDoList","setSortParam","setPageCount","setActivePage","setItemPerPage","isLoading","setIsLoading","getToDoList","useCallback","a","get","params","filterBy","order","taskCount","data","tasks","console","log","stack","useEffect","createNewToDo","trim","post","changeTask","patch","changeDoneStatus","deleteToDoItem","delete","currentTarget","Container","maxWidth","pt","param","Number","List","CircularProgress","InputAuth","props","useField","field","meta","margin","error","touched","helperText","LogIn","logInSubmit","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","autoComplete","SignUp","signUpSubmit","firstName","lastName","instanceAuth","Auth","logIn","getUser","loginReq","setTimeout","justify","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","NavBar","handleLog","user","logout","classes","className","AppBar","position","Toolbar","App","setError","open","setOpen","setLogIn","setUser","auth","setAuth","interceptors","response","use","undefined","includes","status","Promise","reject","setItem","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76204ca3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const  CreateToDo = ({onKeyPress}) =>  {\r\n    const [newToDo, setNewToDo] = useState('');\r\n    const handleNewToDo = (e) => {\r\n        setNewToDo(e.target.value);\r\n      };\r\n    return (\r\n        <TextField \r\n            id=\"outlined-basic\" \r\n            label=\"New to do\" \r\n            variant=\"outlined\" \r\n            size=\"small\" \r\n            fullWidth={true} \r\n            type=\"text\" \r\n            value={newToDo} \r\n            onChange={e => handleNewToDo(e)} \r\n            onKeyPress={onKeyPress} \r\n            onKeyUp={e => e.key === \"Enter\" && setNewToDo('')} \r\n        />\r\n        )\r\n}\r\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const  Pagination = ({onPageNow, pageCount, activePage}) =>  {\n    const pageArr = new Array(pageCount).fill(1).map((e, i) => i + 1);\n    return (\n        <ButtonGroup  color=\"primary\" aria-label=\"contained button group\">            \n            <Button onClick={onPageNow} value=\"1\"><ArrowBackIcon /></Button>\n                {pageArr.map(page => <Button key={`item-${page}`} onClick={onPageNow} value={page} variant={ activePage === page &&  'contained'}>{page}</Button>)}\n            <Button onClick={onPageNow} value={pageArr.length}><ArrowForwardIcon /> </Button>\n        </ButtonGroup>\n    );\n};","import React, { useState } from 'react';\nimport { ListItemText , ListItem, ListItemIcon, ListItemSecondaryAction, IconButton, Checkbox, Input } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const ToDoListItem = ({task, onCheck, onDelete, onChange}) => {\n  const [chanher, setChanher] = useState(false);\n  const showInput = (e) => {\n    setChanher(!chanher)\n  }; \n\n return(\n <ListItem>\n      <ListItemIcon>\n        <Checkbox \n          color=\"primary\"  \n          onChange={onCheck} \n          checked={task.done} \n          value={task.id} \n        />\n      </ListItemIcon>\n      {chanher \n        ? (<Input \n            defaultValue={task.name}\n            autoFocus={true}\n            name={`${task.id}`}\n            onBlur={e => showInput(e)} \n            onKeyDown={e => e.key === \"Escape\" && setChanher(false)} \n            onKeyPress={onChange}\n            onKeyUp={e => e.key === \"Enter\" && setChanher(false)}\n          />) \n        : (<ListItemText  \n            primary={task.name}  \n            onClick={e => showInput(e)}\n          />)\n      }\n        \n        <ListItemText  primary={task.createdAt} />\n        <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete} value={task.id}>\n                      <DeleteIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n    </ListItem>\n   \n )   \n};","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\n\nexport default function DoneSort({onChange, doneSort}) {\n    return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n    <Button onClick={onChange} variant={ doneSort === \"\" && \"contained\"} value=\"\">All</Button>\n    <Button onClick={onChange} variant={ doneSort === \"true\" && \"contained\"} value=\"true\">Done</Button>\n    <Button onClick={onChange} variant={ doneSort === \"false\" && \"contained\"} value=\"false\" >Undone</Button>\n    </ButtonGroup>\n    )\n}\n","import React from 'react';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nexport default function DateSort({dataSort, onChange}) {\r\n    return(<>\r\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n    <Button size=\"medium\" value=\"asc\" onClick={onChange} variant={ dataSort === \"asc\" && \"contained\"}><ArrowUpwardIcon fontSize=\"inherit\" /></Button>\r\n    <Button size=\"medium\" value=\"desc\" onClick={onChange} variant={ dataSort === \"desc\" && \"contained\"}><ArrowDownwardIcon fontSize=\"inherit\" /></Button>\r\n    </ButtonGroup>  \r\n      </>\r\n    );\r\n};","import React from 'react';\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nexport const ItemPerPageFilter = ({onChangeItemFilter, itemPerPage}) => {\n    return(\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={itemPerPage}\n          onChange={onChangeItemFilter}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n        </Select>\n    )\n}","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport DoneSort from \"../components/DoneSort\";\nimport DateSort from \"../components/DateSort\";\nimport { ItemPerPageFilter } from '../components/ItemPerPageFilter';\n\nexport const FilterPanel = ({onChange, sortParam, doneSort, onChangeItemFilter, itemPerPage}) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <DoneSort onChange={doneSort} doneSort={sortParam.done} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Sort by:</Typography>\n        <DateSort onChange={onChange} dataSort={sortParam.date} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Page count</Typography>\n        <ItemPerPageFilter  onChangeItemFilter={onChangeItemFilter} itemPerPage={itemPerPage}/>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, {  useState, useEffect, useCallback} from  'react';\r\nimport { Container, Grid, List, CircularProgress} from '@material-ui/core';\r\nimport { CreateToDo }  from '../components/CreateToDo';\r\nimport { Pagination } from '../components/Pagination';\r\nimport { ToDoListItem } from '../components/ToDoListItem';\r\nimport { FilterPanel } from './FilterPanel';\r\nimport axios from 'axios';\r\nconst instanceToDo = axios.create({\r\n    baseURL: process.env.REACT_APP_LINK,\r\n    headers: {\r\n      'Authorization': sessionStorage.getItem('token')\r\n    }\r\n})\r\n \r\nexport const ToDoList = ({token}) => {\r\n  const [toDoList, setToDoList] = useState([]);\r\n  const [sortParam, setSortParam] = useState({ done: \"\", date: \"desc\" });\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [itemPerPage, setItemPerPage] = useState(5);\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const getToDoList =  useCallback( async (token) => {\r\n    try{\r\n      if(sessionStorage.token) {\r\n        const  {data: {pageCount, tasks}}  = await instanceToDo.get('/tasks', {\r\n          params: {\r\n            filterBy: sortParam.done,\r\n            order: sortParam.date,\r\n            page: activePage,\r\n            taskCount: itemPerPage\r\n          },\r\n          headers: {\r\n            'Authorization': token ?? sessionStorage.getItem('token')\r\n          }\r\n\r\n        });\r\n        setPageCount(pageCount);\r\n        setToDoList(tasks)\r\n      }\r\n      if(!sessionStorage.token) {\r\n        setPageCount(1);\r\n        setToDoList([])\r\n      }\r\n      \r\n      await setIsLoading(true);\r\n    } catch(error) {\r\n      console.log(error.stack);\r\n    }\r\n\r\n\r\n}, [sortParam, activePage, itemPerPage]);\r\n  \r\n  useEffect((token) => {getToDoList(token)}, [getToDoList]);\r\n\r\n  const createNewToDo = async (e) => {\r\n    try{\r\n      if(e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceToDo.post('/task', {name: e.target.value.trim(), done: false}, {headers: {\r\n          'Authorization': token ?? sessionStorage.getItem('token')\r\n        }});\r\n        getToDoList();\r\n      };\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const changeTask = async (e) => {\r\n    try{\r\n      if (e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceToDo.patch(`/task/${e.target.name}`, {name : e.target.value}, {headers: {\r\n          'Authorization': token ?? sessionStorage.getItem('token')\r\n        }});\r\n        getToDoList(token);\r\n      }; \r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const changeDoneStatus = async (e) => {\r\n    try{\r\n      await instanceToDo.patch(`/task/${e.target.value}`, {done: e.target.checked}, {headers: {\r\n        'Authorization': token ?? sessionStorage.getItem('token')\r\n      }});\r\n      getToDoList(token);\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteToDoItem = async (e) => {\r\n    try {\r\n      await instanceToDo.delete(`/task/${e.currentTarget.value}`, {headers: {\r\n        'Authorization': token ?? sessionStorage.getItem('token')\r\n      }});\r\n      getToDoList(token);\r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  const clickOnPage = (e) => {\r\n    setActivePage(Number(e.currentTarget.value));\r\n  };\r\n\r\n  const changeItemPerPageFilter = (e) => {\r\n      setItemPerPage(e.target.value)\r\n  };\r\n\r\n  const taskSort = (e) => {\r\n    setSortParam(param => ({...param, date: e.currentTarget.value}) );\r\n  };\r\n\r\n  const doneSort = (e) => {\r\n    setSortParam(param => ({...param, done: e.currentTarget.value}));\r\n    setActivePage(1);\r\n  };\r\n\r\n  return(\r\n      <Container maxWidth=\"md\">\r\n          <Grid item pt={50}>\r\n          <CreateToDo onKeyPress={createNewToDo} />\r\n          </Grid>\r\n          <FilterPanel \r\n              onChange={taskSort} \r\n              sortParam={sortParam} \r\n              doneSort={doneSort} \r\n              onChangeItemFilter={changeItemPerPageFilter}\r\n              itemPerPage={itemPerPage} />\r\n          <Grid item alignItems=\"center\" container xs={12}>\r\n              {isLoading && (pageCount > 1 && <Pagination onPageNow={clickOnPage} pageCount={pageCount} activePage={activePage}  />) }\r\n          </Grid>\r\n          <List>\r\n      {isLoading\r\n              ?  (toDoList.map(task => <ToDoListItem key={task.id} task={task} onCheck={changeDoneStatus} onDelete={deleteToDoItem} onChange={changeTask} />)) \r\n              :   <CircularProgress />}\r\n          </List>\r\n      </Container>\r\n  );\r\n};","import React from 'react';\nimport { useField } from 'formik';\nimport { TextField, Grid  } from '@material-ui/core';\n\nexport const InputAuth = ({ ...props }) => {\n    const [field, meta] = useField(props);\n    return(\n        <Grid item >\n        <TextField\n          fullWidth\n          margin='normal'\n          error={(meta.touched && meta.error) && true}\n          helperText={(meta.touched && meta.error) && meta.error}\n          variant=\"outlined\"\n          {...field}\n          {...props}\n        />\n        </Grid>\n    )\n};\n","import React from 'react';\nimport { Formik, Form  } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid  } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\n\n\nexport const LogIn = ({logInSubmit}) => {\n\n    return(\n        <Formik \n            initialValues={{\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                logInSubmit(values)\n                setSubmitting(false);\n            }}>\n            <Form>\n            <InputAuth name=\"email\" label=\"Email\"   />\n            <InputAuth name=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\"   />\n            <Grid item>\n            <Button \n                variant=\"contained\" \n                color=\"primary\" \n                type=\"submit\"\n                fullWidth\n                >Log in</Button>\n            </Grid>\n            </Form>\n        </Formik>\n    )\n};","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\n\n\nexport const SignUp = ({signUpSubmit}) => {\n    return(\n        <Formik\n            initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                firstName: Yup.string().required('Required'),\n                lastName: Yup.string().required('Required'),\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')})\n            }\n            onSubmit={(values, { setSubmitting }) => {\n              signUpSubmit(values);\n              setSubmitting(false);\n              }}>\n            <Form>\n              <InputAuth name=\"firstName\" label=\"First name\" />\n              <InputAuth name=\"lastName\" label=\"Last name\" />\n              <InputAuth name=\"email\" label=\"Email\" />\n              <InputAuth name=\"password\" label=\"Password\"  type=\"password\" autoComplete=\"current-password\" />\n              <Grid item >\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                type=\"submit\"\n                fullWidth \n                >Sign up</Button>\n              </Grid>\n\n            </Form>\n        </Formik>\n    );\n};","import React from 'react';\nimport { LogIn } from '../components/LogIn';\nimport { SignUp } from '../components/SignUp';\nimport { Grid } from '@material-ui/core';\nimport axios from 'axios';\n\nexport const instanceAuth = axios.create({\n    baseURL: process.env.REACT_APP_LINK\n})\n\n\nexport const Auth = ({logIn, getUser}) => {\nconst logInSubmit = async (values) => {\n    try{\n        const loginReq = await instanceAuth.post('login', {...values});\n        getUser(loginReq.data)\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nconst signUpSubmit = async (values) => {\n    try {\n      await instanceAuth.post('signup', {...values});\n      setTimeout(logInSubmit({email: values.email, password: values.password}), 3000); \n    } catch(error) {\n      console.log(error);\n    }\n  };\n\n    return(\n        <Grid container spacing={10} justify=\"center\"   alignItems=\"center\" >\n        <Grid item xs={5} >  \n        {logIn ? <LogIn logInSubmit={logInSubmit}  /> : <SignUp signUpSubmit={signUpSubmit} />}\n        </Grid>\n    </Grid>\n    )\n};","import React from 'react';\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport const NavBar = ({handleLog, logIn, user, logout}) => {\n\n\n  const classes = useStyles();\n    return(\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n        <Toolbar>\n\n          <Typography variant=\"h6\" className={classes.title}>\n          To do list\n          </Typography>\n\n          {user && (\n            <div><Typography variant=\"body2\" >\n            {`${user.firstName} ${user.lastName}`}\n            </Typography>\n            <Button color=\"inherit\" onClick={logout}>Log Out</Button></div>\n          )}\n          {!user && <Button color=\"inherit\" onClick={handleLog}>{logIn ? 'Sign up' : 'Login'}</Button>}\n        </Toolbar>\n      </AppBar>\n      </div>\n\n    )\n};\n","import React, {  useEffect, useState } from 'react';\r\nimport { Container, Snackbar} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { ToDoList } from './container/ToDoList';\r\nimport axios from 'axios';\r\nimport { Auth } from './container/Auth';\r\nimport { NavBar } from './components/NavBar';\r\n\r\n\r\nfunction App() {\r\n  const [error, setError] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [logIn, setLogIn] = useState(true);\r\n  const [user, setUser] = useState();\r\n  const [auth, setAuth] = useState(false);\r\n\r\n  axios.interceptors.response.use(undefined, (error) =>  {\r\n    if( [422, 404, 400].includes(error.response?.status) ) {\r\n      setError(error)\r\n      setOpen(true);\r\n      console.log(\"erroer\");\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(user) {\r\n      setAuth(true);\r\n      sessionStorage.setItem('token', user.token)\r\n    }\r\n    if(!user) {\r\n      setAuth(false);\r\n    }\r\n  }, [user]);\r\n\r\n\r\n  const logout = () => {\r\n    setUser(undefined)\r\n  };\r\n  const getUser = (values) => {\r\n    setUser({...values})\r\n  };\r\n  const handleLog = (e) => {\r\n    setLogIn(!logIn)\r\n};\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar handleLog={handleLog} logIn={logIn} user={user} logout={logout} />\r\n      {auth && <ToDoList token={user?.token} />}\r\n      {!auth && <Auth logIn={logIn} getUser={getUser} />}\r\n      {error && (<Snackbar open={open} autoHideDuration={6000} onClose={handleClose} >\r\n                              <Alert severity=\"error\" onClose={handleClose} > \r\n                              <AlertTitle>{error.name}</AlertTitle>\r\n                              {error.message} \r\n                              </Alert>\r\n                            </Snackbar>)}       \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from 'axios';\n\n\naxios.interceptors.request.use(request => {\n  return request;\n}, error =>{\n  return Promise.reject(error);\n});\n\n\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}