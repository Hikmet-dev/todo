{"version":3,"sources":["components/CreateToDo.js","components/DoneSort.js","components/DateSort.js","components/ItemPerPageFilter.js","container/FilterPanel.js","components/ToDoListItem.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["CreateToDo","onKeyPress","useState","newToDo","setNewToDo","TextField","id","label","variant","size","fullWidth","type","value","onChange","e","target","handleNewToDo","onKeyUp","key","DoneSort","doneSort","ButtonGroup","color","aria-label","Button","onClick","DateSort","dataSort","fontSize","ItemPerPageFilter","onChangeItemFilter","itemPerPage","Select","labelId","MenuItem","FilterPanel","sortParam","Grid","container","spacing","item","xs","done","alignItems","Typography","date","ToDoListItem","task","onCheck","onDelete","chanher","setChanher","showInput","ListItem","ListItemIcon","Checkbox","checked","uuid","Input","defaultValue","name","autoFocus","onBlur","onKeyDown","ListItemText","primary","createdAt","ListItemSecondaryAction","IconButton","edge","Pagination","onPageNow","pageCount","activePage","pageArr","Array","fill","map","i","page","length","postURL","App","toDoList","setToDoList","setSortParam","setPageCount","setActivePage","setItemPerPage","isLoading","error","loadStatus","setLoadStatus","open","setOpen","axios","interceptors","response","use","undefined","status","param","Promise","reject","getToDoList","useCallback","a","doneParam","get","data","paginator","Math","floor","paginCount","activePagin","sliceStart","sliceEnd","slice","todolister","useEffect","createNewToDo","trim","post","changeDoneStatus","patch","changeTask","deleteToDoItem","delete","currentTarget","handleClose","event","reason","Container","maxWidth","component","align","pt","Number","List","CircularProgress","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","request","ReactDOM","render","document","getElementById"],"mappings":"yQAGe,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,WAChC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAIA,OACI,cAACC,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,YACNC,QAAQ,WACRC,KAAK,QACLC,WAAW,EACXC,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAZG,SAACA,GACnBV,EAAWU,EAAEC,OAAOH,OAWDI,CAAcF,IAC7Bb,WAAYA,EACZgB,QAAS,SAAAH,GAAC,MAAc,UAAVA,EAAEI,KAAmBd,EAAW,O,sBCf3C,SAASe,EAAT,GAAyC,IAAtBN,EAAqB,EAArBA,SAAUO,EAAW,EAAXA,SAExC,OACA,eAACC,EAAA,EAAD,CAAaC,MAAM,UAAUC,aAAW,gCAAxC,UACA,cAACC,EAAA,EAAD,CAAQC,QAASZ,EAAUL,QAAuB,QAAbY,GAAsB,YAAaR,MAAM,MAA9E,iBACA,cAACY,EAAA,EAAD,CAAQC,QAASZ,EAAUL,QAAuB,SAAbY,GAAuB,YAAaR,MAAM,OAA/E,kBACA,cAACY,EAAA,EAAD,CAAQC,QAASZ,EAAUL,QAAuB,UAAbY,GAAwB,YAAaR,MAAM,QAAhF,uB,sCCLW,SAASc,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,SAAUd,EAAW,EAAXA,SACxC,OAAO,mCACP,eAACQ,EAAA,EAAD,CAAab,QAAQ,OAAOc,MAAM,UAAUC,aAAW,4BAAvD,UACA,cAACC,EAAA,EAAD,CAAQf,KAAK,SAASG,MAAM,YAAYa,QAASZ,EAAUL,QAAuB,cAAbmB,GAA4B,YAAjG,SAA8G,cAAC,IAAD,CAAmBC,SAAS,cAC1I,eAACJ,EAAA,EAAD,CAAQf,KAAK,SAASG,MAAM,aAAaa,QAASZ,EAAUL,QAAuB,eAAbmB,GAA6B,YAAnG,cAAiH,cAAC,IAAD,CAAiBC,SAAS,YAA3I,Y,sBCJSC,EAAoB,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,mBAAoBC,EAAiB,EAAjBA,YACnD,OACI,eAACC,EAAA,EAAD,CACEC,QAAQ,2BACR3B,GAAG,qBACHM,MAAOmB,EACPlB,SAAUiB,EAJZ,UAME,cAACI,EAAA,EAAD,CAAUtB,MAAO,EAAjB,eACA,cAACsB,EAAA,EAAD,CAAUtB,MAAO,GAAjB,gBACA,cAACsB,EAAA,EAAD,CAAUtB,MAAO,GAAjB,oBCTGuB,EAAc,SAAC,GAAsE,IAArEtB,EAAoE,EAApEA,SAAUuB,EAA0D,EAA1DA,UAAWhB,EAA+C,EAA/CA,SAAUU,EAAqC,EAArCA,mBAAoBC,EAAiB,EAAjBA,YAC9E,OACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACE,cAACtB,EAAD,CAAUN,SAAUO,EAAUA,SAAUgB,EAAUM,SAEpD,eAACL,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,WAAW,SAASL,WAAS,EAA/C,UACE,cAACM,EAAA,EAAD,CAAYpC,QAAQ,YAApB,sBACA,cAACkB,EAAD,CAAUb,SAAUA,EAAUc,SAAUS,EAAUS,UAEpD,eAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGE,WAAW,SAASL,WAAS,EAA/C,UACE,cAACM,EAAA,EAAD,CAAYpC,QAAQ,YAApB,wBACA,cAAC,EAAD,CAAoBsB,mBAAoBA,EAAoBC,YAAaA,W,gFCdpEe,EAAe,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,SAAUpC,EAAc,EAAdA,SACrD,EAA8BX,oBAAS,GAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,SAACtC,GACjBqC,GAAYD,IAGf,OACA,eAACG,EAAA,EAAD,WACK,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEjC,MAAM,UACNT,SAAUmC,EACVQ,QAAST,EAAKL,KACd9B,MAAOmC,EAAKU,SAGfP,EACI,cAACQ,EAAA,EAAD,CACCC,aAAcZ,EAAKa,KACnBC,WAAW,EACXD,KAAI,UAAKb,EAAKU,MACdK,OAAQ,SAAAhD,GAAC,OAAIsC,KACbW,UAAW,SAAAjD,GAAC,MAAc,WAAVA,EAAEI,KAAoBiC,GAAW,IACjDlD,WAAYY,EACZI,QAAS,SAAAH,GAAC,MAAc,UAAVA,EAAEI,KAAmBiC,GAAW,MAE/C,cAACa,EAAA,EAAD,CACCC,QAASlB,EAAKa,KACdnC,QAAS,SAAAX,GAAC,OAAIsC,OAIlB,cAACY,EAAA,EAAD,CAAeC,QAASlB,EAAKmB,YAC7B,cAACC,EAAA,EAAD,UACY,cAACC,EAAA,EAAD,CAAYC,KAAK,MAAM9C,aAAW,SAASE,QAASwB,EAAUrC,MAAOmC,EAAKU,KAA1E,SACE,cAAC,IAAD,Y,kCChCRa,EAAa,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAEzCC,EAAU,IAAIC,MAAMH,GAAWI,KAAK,GAAGC,KAAI,SAAC/D,EAAGgE,GAAJ,OAAUA,EAAI,KAI/D,OACI,eAACzD,EAAA,EAAD,CAAcC,MAAM,UAAUC,aAAW,yBAAzC,UACI,cAACC,EAAA,EAAD,CAAQC,QAAS8C,EAAW3D,MAAM,IAAlC,SAAsC,cAAC,IAAD,MACjC8D,EAAQG,KAAI,SAAAE,GAAI,OAAI,cAACvD,EAAA,EAAD,CAA8BC,QAAS8C,EAAW3D,MAAOmE,EAAMvE,QAAUiE,IAAeM,GAAS,YAAjG,SAA+GA,GAA/G,eAAsBA,OAC/C,eAACvD,EAAA,EAAD,CAAQC,QAAS8C,EAAW3D,MAAO8D,EAAQM,OAA3C,UAAmD,cAAC,IAAD,IAAnD,W,iBCPNC,EAAU,oDA4KDC,MAvKf,WAIE,MAAgChF,mBAAS,IAAzC,mBAAOiF,EAAP,KAAiBC,EAAjB,KACA,EAAkClF,mBAAS,CAAEwC,KAAM,MAAOG,KAAM,cAAhE,mBAAOT,EAAP,KAAkBiD,EAAlB,KACA,EAAkCnF,mBAAS,GAA3C,mBAAOsE,EAAP,KAAkBc,EAAlB,KACA,EAAoCpF,mBAAS,GAA7C,mBAAOuE,EAAP,KAAmBc,EAAnB,KACA,EAAsCrF,mBAAS,GAA/C,mBAAO6B,EAAP,KAAoByD,EAApB,KACA,EAAoCtF,mBAAS,CAACuF,WAAW,EAAOC,MAAO,OAAvE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAuB1F,oBAAS,GAAhC,mBAAO2F,EAAP,KAAaC,EAAb,KAIAC,IAAMC,aAAaC,SAASC,SAAIC,GAAW,SAAoBT,GAM7D,OAL8B,MAA1BA,EAAMO,SAASG,QAA4C,MAA1BV,EAAMO,SAASG,QAA4C,MAA1BV,EAAMO,SAASG,SAEnFR,GAAc,SAAAS,GAAK,kCAASA,GAAT,IAAgBX,MAAQA,OAC3CI,GAAQ,IAEHQ,QAAQC,OAAOb,MAKvB,IAAMc,EAAeC,sBAAW,sBAAE,8CAAAC,EAAA,2DAG1BtE,EAAUM,KAHgB,OAI1B,SAJ0B,OAO1B,UAP0B,6BAK5BiE,EAAY,iBALgB,kCAQ7BA,EAAY,mBARiB,kCAW3BA,EAAY,GAXe,4CAeNZ,IAAMa,IAAN,UA9ChB,qDA8CgB,YAAuBD,EAAvB,iBAA6D,cAAnBvE,EAAUS,KAAuB,MAAQ,SAf7E,wBAerBgE,EAfqB,EAerBA,KAEFC,EAjBuB,+BAAAJ,EAAA,MAiBX,WAAOG,EAAMpC,EAAY1C,GAAzB,qBAAA2E,EAAA,sEACSG,EAAK7B,OADd,2BACuBjD,IADvB,gCAEbgF,KAAKC,MAAMH,EAAK7B,OAASjD,GAAe,EAF3B,2BAGb8E,EAAK7B,OAASjD,EAHD,cACVkF,EADU,eAKUxC,EALV,4BAKwBwC,IALxB,kCAKqCxC,EALrC,6BAKkDwC,EALlD,eAKVC,EALU,eAMUA,EAAc,EANxB,gCAM6BnF,EAAvCoF,EANU,oBAOOD,EAPP,gCAOqBnF,EAA/BqF,EAPU,4BAST,CACLH,WAAYA,EACZC,YAAcA,EACdC,WAAaA,EACbC,SAAWA,IAbG,4CAjBW,oEAkCiCN,EAAUD,EAAMpC,EAAY1C,GAlC7D,wBAkCtBkF,EAlCsB,EAkCtBA,WAAYC,EAlCU,EAkCVA,YAAaC,EAlCH,EAkCGA,WAAYC,EAlCf,EAkCeA,SAEhD7B,EAAc2B,GACd5B,EAAa2B,GArCoB,UAuCRJ,EAAKQ,MAAMF,EAAYC,GAvCf,eAuC3BE,EAvC2B,OAwCjClC,EAAYkC,GAxCqB,UA0C3B1B,GAAc,SAAAS,GAAK,kCAASA,GAAT,IAAgBZ,WAAW,OA1CnB,4CA2ChC,CAAChB,EAAY1C,EAAaK,IAG7BmF,qBAAU,WAERf,MAEC,CAACA,EAAapE,IAGjB,IAAMoF,EAAa,uCAAG,WAAO1G,GAAP,SAAA4F,EAAA,yDACL,UAAV5F,EAAEI,MAAmBJ,EAAEC,OAAOH,MAAM6G,OADrB,gCAEV1B,IAAM2B,KAAKzC,EAAS,CAACrB,KAAM9C,EAAEC,OAAOH,MAAM6G,OAAQ/E,MAAM,IAF9C,OAGhB8D,IAHgB,kDAAH,sDAOXmB,EAAgB,uCAAG,WAAO7G,GAAP,SAAA4F,EAAA,sEACjBX,IAAM6B,MAAN,UAAe3C,EAAf,YAA0BnE,EAAEC,OAAOH,OAAS,CAAC8B,KAAM5B,EAAEC,OAAOyC,UAD3C,OAEvBgD,IAFuB,2CAAH,sDAKhBqB,EAAU,uCAAG,WAAO/G,GAAP,SAAA4F,EAAA,yDACH,UAAV5F,EAAEI,MAAmBJ,EAAEC,OAAOH,MAAM6G,OADvB,gCAET1B,IAAM6B,MAAN,UAAe3C,EAAf,YAA0BnE,EAAEC,OAAO6C,MAAQ,CAACA,KAAO9C,EAAEC,OAAOH,QAFnD,OAGf4F,IAHe,kDAAH,sDAOVsB,EAAc,uCAAG,WAAOhH,GAAP,SAAA4F,EAAA,sEACfX,IAAMgC,OAAN,UAAgB9C,EAAhB,YAA2BnE,EAAEkH,cAAcpH,QAD5B,OAErB4F,IAFqB,2CAAH,sDAoBdyB,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJrC,GAAQ,IAKZ,OACE,eAACsC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACzF,EAAA,EAAD,CAAYpC,QAAQ,KAAK8H,UAAU,KAAKC,MAAM,SAA9C,wBACA,cAAClG,EAAA,EAAD,CAAMG,MAAI,EAACgG,GAAI,GAAf,SACA,cAACxI,EAAD,CAAYC,WAAYuH,MAExB,cAAC,EAAD,CACE3G,SAxBa,SAACC,GAChBuE,GAAa,SAAAgB,GAAK,kCAASA,GAAT,IAAgBxD,KAAM/B,EAAEkH,cAAcpH,YAwBtDwB,UAAWA,EACXhB,SAtBa,SAACN,GAChBuE,GAAa,SAAAgB,GAAK,kCAASA,GAAT,IAAgB3D,KAAM5B,EAAEkH,cAAcpH,YAsBtDkB,mBA/B4B,SAAChB,GAC7B0E,EAAe1E,EAAEC,OAAOH,QA+BxBmB,YAAaA,IACf,cAACM,EAAA,EAAD,CAAMG,MAAI,EAACG,WAAW,SAASL,WAAS,EAACG,GAAI,GAA7C,SACGkD,EAAWF,WAAcjB,EAAY,GAAK,cAAC,EAAD,CAAYD,UAtCvC,SAACzD,GACnByE,EAAckD,OAAO3H,EAAEkH,cAAcpH,SAqC4C4D,UAAWA,EAAWC,WAAYA,MAGnH,eAACiE,EAAA,EAAD,WAEH/C,EAAWF,UACAN,EAASN,KAAI,SAAA9B,GAAI,OAAI,cAAC,EAAD,CAA8BA,KAAMA,EAAMC,QAAS2E,EAAkB1E,SAAU6E,EAAgBjH,SAAUgH,GAAtF9E,EAAKU,SAC7C,cAACkF,EAAA,EAAD,IAEXhD,EAAWD,OAAU,cAACkD,EAAA,EAAD,CAAU/C,KAAMA,EAAMgD,iBAAkB,IAAMC,QAASb,EAAvD,SACE,eAACc,EAAA,EAAD,CAAOC,SAAS,QAAQF,QAASb,EAAjC,UACA,cAACgB,EAAA,EAAD,UAAatD,EAAWD,MAAM9B,OAC7B+B,EAAWD,MAAMwD,oBC5J7BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdrD,IAAMC,aAAa4D,QAAQ1D,KAAI,SAAA0D,GAC7B,OAAOA,KACN,SAAAlE,GACD,OAAOY,QAAQC,OAAOb,MAMxBmE,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1950418d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\n\nexport default function CreateToDo({onKeyPress}) {\n    const [newToDo, setNewToDo] = useState('');\n    const handleNewToDo = (e) => {\n        setNewToDo(e.target.value);\n      };\n    return (\n        <TextField \n            id=\"outlined-basic\" \n            label=\"New to do\" \n            variant=\"outlined\" \n            size=\"small\" \n            fullWidth={true} \n            type=\"text\" \n            value={newToDo} \n            onChange={e => handleNewToDo(e)} \n            onKeyPress={onKeyPress} \n            onKeyUp={e => e.key === \"Enter\" && setNewToDo('')} \n        />\n        )\n}\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\n\n\nexport default function DoneSort({onChange, doneSort}) {\n\n    return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n    <Button onClick={onChange} variant={ doneSort === \"all\" && \"contained\"} value=\"all\">All</Button>\n    <Button onClick={onChange} variant={ doneSort === \"true\" && \"contained\"} value=\"true\">Done</Button>\n    <Button onClick={onChange} variant={ doneSort === \"false\" && \"contained\"} value=\"false\" >Undone</Button>\n    </ButtonGroup>\n\n    )\n}\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nexport default function DateSort({dataSort, onChange}) {\n    return(<>\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n    <Button size=\"medium\" value=\"ascending\" onClick={onChange} variant={ dataSort === \"ascending\" && \"contained\"}><ArrowDownwardIcon fontSize=\"inherit\" /></Button>\n    <Button size=\"medium\" value=\"descending\" onClick={onChange} variant={ dataSort === \"descending\" && \"contained\"}> <ArrowUpwardIcon fontSize=\"inherit\" /> </Button>\n    </ButtonGroup>  \n      </>\n    );\n};","import React from 'react';\nimport { Select, MenuItem } from \"@material-ui/core\";\n\n\n\nexport const ItemPerPageFilter = ({onChangeItemFilter, itemPerPage}) => {\n    return(\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={itemPerPage}\n          onChange={onChangeItemFilter}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n        </Select>\n    )\n}","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport DoneSort from \"../components/DoneSort\";\nimport DateSort from \"../components/DateSort\";\nimport { ItemPerPageFilter } from '../components/ItemPerPageFilter';\n\nexport const FilterPanel = ({onChange, sortParam, doneSort, onChangeItemFilter, itemPerPage}) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <DoneSort onChange={doneSort} doneSort={sortParam.done} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Sort by:</Typography>\n        <DateSort onChange={onChange} dataSort={sortParam.date} />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Page count</Typography>\n        <ItemPerPageFilter  onChangeItemFilter={onChangeItemFilter} itemPerPage={itemPerPage}/>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { ListItemText , ListItem, ListItemIcon, ListItemSecondaryAction, IconButton, Checkbox, Input } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const ToDoListItem = ({task, onCheck, onDelete, onChange}) => {\n  const [chanher, setChanher] = useState(false);\n\n  const showInput = (e) => {\n    setChanher(!chanher)\n  }; \n\n return(\n <ListItem>\n      <ListItemIcon>\n        <Checkbox \n          color=\"primary\"  \n          onChange={onCheck} \n          checked={task.done} \n          value={task.uuid} \n        />\n      </ListItemIcon>\n      {chanher \n        ? (<Input \n            defaultValue={task.name}\n            autoFocus={true}\n            name={`${task.uuid}`}\n            onBlur={e => showInput(e)} \n            onKeyDown={e => e.key === \"Escape\" && setChanher(false)} \n            onKeyPress={onChange}\n            onKeyUp={e => e.key === \"Enter\" && setChanher(false)}\n          />) \n        : (<ListItemText  \n            primary={task.name}  \n            onClick={e => showInput(e)}\n          />)\n      }\n        \n        <ListItemText  primary={task.createdAt} />\n        <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete} value={task.uuid}>\n                      <DeleteIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n    </ListItem>\n   \n )   \n};","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\n\n\n\nexport const  Pagination = ({onPageNow, pageCount, activePage}) =>  {\n\n    const pageArr = new Array(pageCount).fill(1).map((e, i) => i + 1);\n\n   \n\n    return (\n        <ButtonGroup  color=\"primary\" aria-label=\"contained button group\">            \n            <Button onClick={onPageNow} value=\"1\"><ArrowBackIcon /></Button>\n                {pageArr.map(page => <Button  key={`item-${page}`} onClick={onPageNow} value={page} variant={ activePage === page &&  'contained'}>{page}</Button>)}\n            <Button onClick={onPageNow} value={pageArr.length}><ArrowForwardIcon /> </Button>\n        </ButtonGroup>\n    )\n}","import React, {  useState, useEffect, useCallback} from 'react';\r\n\r\nimport { Container, Grid, Typography, List, CircularProgress, Snackbar} from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport CreateToDo  from './components/CreateToDo';\r\nimport { FilterPanel } from './container/FilterPanel';\r\nimport { ToDoListItem } from './components/ToDoListItem';\r\nimport { Pagination } from './components/Pagination';\r\nimport axios from 'axios';\r\n\r\nconst getURL = 'https://todo-api-learning.herokuapp.com/v1/tasks/6';\r\nconst postURL = 'https://todo-api-learning.herokuapp.com/v1/task/6';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const [toDoList, setToDoList] = useState([]);\r\n  const [sortParam, setSortParam] = useState({ done: \"all\", date: \"ascending\" });\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [itemPerPage, setItemPerPage] = useState(5);\r\n  const [loadStatus, setLoadStatus] = useState({isLoading: false, error: null});\r\n  const [open, setOpen] =useState(false)\r\n  \r\n  \r\n  \r\n  axios.interceptors.response.use(undefined, function aziosSatta(error) {\r\n    if( error.response.status === 422 || error.response.status === 404 || error.response.status === 400 ) {\r\n      // console.log('iter');\r\n      setLoadStatus(param => ({...param, error : error}))\r\n      setOpen(true);\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n\r\n\r\n   const getToDoList =  useCallback( async () => {\r\n      \r\n    let doneParam;\r\n    switch(sortParam.done) {\r\n      case 'true': \r\n         doneParam = 'filterBy=done&';\r\n      break;\r\n      case 'false':\r\n        doneParam = 'filterBy=undone&';\r\n        break;\r\n        default:\r\n          doneParam = '';\r\n          break;\r\n        };\r\n        \r\n        const { data } = await axios.get(`${getURL}?${doneParam}order=${ sortParam.date === 'ascending' ? 'asc' : 'desc'}`);\r\n        \r\n        const paginator = async (data, activePage, itemPerPage) => {\r\n          const paginCount = await data.length % itemPerPage\r\n          ? (Math.floor(data.length / itemPerPage) + 1) \r\n          : (data.length / itemPerPage);\r\n          \r\n          const activePagin = await activePage <= paginCount ? activePage : paginCount;\r\n          const sliceStart = await (activePagin - 1) * itemPerPage;\r\n          const sliceEnd = await activePagin * itemPerPage;\r\n          \r\n          return {\r\n            paginCount: paginCount,\r\n            activePagin : activePagin,\r\n            sliceStart : sliceStart,\r\n            sliceEnd : sliceEnd\r\n          }\r\n        };\r\n        \r\n        const {paginCount, activePagin, sliceStart, sliceEnd} = await paginator(data, activePage, itemPerPage);\r\n        \r\n    setActivePage(activePagin);\r\n    setPageCount(paginCount);\r\n    \r\n    const todolister = await data.slice(sliceStart, sliceEnd);\r\n    setToDoList(todolister)\r\n    \r\n    await setLoadStatus(param => ({...param, isLoading: true}));\r\n  }, [activePage, itemPerPage, sortParam]);\r\n  \r\n  \r\n  useEffect(() => {\r\n    \r\n    getToDoList();\r\n    \r\n  }, [getToDoList, sortParam]);\r\n\r\n \r\n  const createNewToDo = async (e) => {\r\n      if(e.key === \"Enter\" && e.target.value.trim()) {\r\n        await axios.post(postURL, {name: e.target.value.trim(), done: false});\r\n        getToDoList();\r\n      };\r\n    };\r\n\r\n    const changeDoneStatus = async (e) => {\r\n      await axios.patch(`${postURL}/${e.target.value}`, {done: e.target.checked});\r\n      getToDoList();\r\n      };\r\n\r\n    const changeTask = async (e) => {\r\n      if (e.key === \"Enter\" && e.target.value.trim()) {\r\n        await axios.patch(`${postURL}/${e.target.name}`, {name : e.target.value});\r\n        getToDoList();\r\n      }; \r\n    };\r\n\r\n    const deleteToDoItem = async (e) => {\r\n      await axios.delete(`${postURL}/${e.currentTarget.value}`);\r\n      getToDoList();\r\n    };\r\n    \r\n    const clickOnPage = (e) => {\r\n      setActivePage(Number(e.currentTarget.value));\r\n    };\r\n\r\n    const changeItemPerPageFilter = (e) => {\r\n        setItemPerPage(e.target.value)\r\n    };\r\n\r\n    const taskSort = (e) => {\r\n      setSortParam(param => ({...param, date: e.currentTarget.value}) );\r\n    };\r\n\r\n    const doneSort = (e) => {\r\n      setSortParam(param => ({...param, done: e.currentTarget.value}) );\r\n    };\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      setOpen(false);\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Typography variant=\"h1\" component=\"h2\" align=\"center\">To do list</Typography>\r\n      <Grid item pt={50}>\r\n      <CreateToDo onKeyPress={createNewToDo} />\r\n      </Grid>\r\n      <FilterPanel \r\n        onChange={taskSort} \r\n        sortParam={sortParam} \r\n        doneSort={doneSort} \r\n        onChangeItemFilter={changeItemPerPageFilter}\r\n        itemPerPage={itemPerPage} />\r\n      <Grid item alignItems=\"center\" container xs={12}>\r\n        {loadStatus.isLoading && (pageCount > 1 && <Pagination onPageNow={clickOnPage} pageCount={pageCount} activePage={activePage}  />) }\r\n      </Grid>\r\n\r\n      <List>\r\n\r\n  {loadStatus.isLoading\r\n          ?  (toDoList.map(task => <ToDoListItem key={task.uuid} task={task} onCheck={changeDoneStatus} onDelete={deleteToDoItem} onChange={changeTask} />)) \r\n          :   <CircularProgress />}\r\n\r\n  {loadStatus.error && (<Snackbar open={open} autoHideDuration={6000} onClose={handleClose} >\r\n                          <Alert severity=\"error\" onClose={handleClose} > \r\n                          <AlertTitle>{loadStatus.error.name}</AlertTitle>\r\n                          {loadStatus.error.message} \r\n                          </Alert>\r\n                        </Snackbar>)}\r\n         \r\n      \r\n      </List>\r\n      \r\n    \r\n    \r\n    </Container>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport axios from 'axios';\n\n\naxios.interceptors.request.use(request => {\n  return request;\n}, error =>{\n  return Promise.reject(error);\n});\n\n\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}