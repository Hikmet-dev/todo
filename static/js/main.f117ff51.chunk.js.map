{"version":3,"sources":["instanceAxios.js","components/CreateToDo.js","components/Pagination.js","components/ToDoListItem.js","components/ItemPerPageFilter.js","features/filter/filterSlice.js","components/DoneSort.js","components/DateSort.js","container/FilterPanel.js","features/user/userSlice.js","container/ToDoList.js","components/InputAuth.js","features/auth/authSlice.js","components/LogIn.js","components/SignUp.js","container/Auth.js","components/NavBar.js","App.js","reportWebVitals.js","features/store.js","index.js"],"names":["instanceHeroku","axios","create","baseURL","process","CreateToDo","onKeyPress","useState","newToDo","setNewToDo","TextField","id","label","variant","size","fullWidth","type","value","onChange","e","target","handleNewToDo","onKeyUp","key","Pagination","onPageNow","pageCount","activePage","pageArr","Array","fill","map","i","ButtonGroup","color","aria-label","Button","onClick","page","length","ToDoListItem","task","onCheck","onDelete","chanher","setChanher","showInput","ListItem","ListItemIcon","Checkbox","checked","done","Input","defaultValue","name","autoFocus","onBlur","onKeyDown","ListItemText","primary","createdAt","ListItemSecondaryAction","IconButton","edge","ItemPerPageFilter","onChangeItemFilter","itemPerPage","Select","labelId","MenuItem","initialState","filterByButtons","undefined","filterBy","orderValue","order","filterSlice","createSlice","reducers","toggleOrder","state","action","payload","toggleFilterBy","actions","selectOrderValue","filter","selectFilterBy","selectOrder","toUpperCase","selectFilterByButtons","DoneSort","useSelector","dispatch","useDispatch","button","currentTarget","DateSort","item","FilterPanel","Grid","container","spacing","xs","alignItems","Typography","fetchUser","createAsyncThunk","userData","thunkAPI","a","post","res","data","userRegistration","firstName","sessionStorage","lastName","token","isLoading","hasError","userSlice","clearUserData","extraReducers","pending","fulfilled","setItem","rejected","selectToken","user","selectFirstName","selectLastName","selectIsLoading","ToDoList","toDoList","setToDoList","setPageCount","setActivePage","setItemPerPage","setIsLoading","getToDoList","useCallback","get","params","taskCount","headers","tasks","useEffect","createNewToDo","trim","changeTask","patch","changeDoneStatus","deleteToDoItem","delete","Container","maxWidth","pt","Number","List","CircularProgress","InputAuth","props","useField","field","meta","margin","error","touched","helperText","authSlice","loginForm","authStatus","toggleLoginForm","toggleAuthStatus","logOut","clear","selectLoginForm","auth","selectAuthStatus","LogIn","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","autoComplete","SignUp","Auth","justify","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","NavBar","LoginForm","classes","className","AppBar","position","Toolbar","App","setError","open","setOpen","interceptors","response","use","includes","status","console","log","Promise","reject","useLayoutEffect","getItem","exp","jwt","split","defaults","Date","now","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","AlertTitle","statusCode","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","authReducer","request","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f117ff51.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const instanceHeroku = axios.create({\n    baseURL: process.env.REACT_APP_LINK\n})","import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const  CreateToDo = ({onKeyPress}) =>  {\r\n    const [newToDo, setNewToDo] = useState('');\r\n    const handleNewToDo = (e) => {\r\n        setNewToDo(e.target.value);\r\n      };\r\n    return (\r\n        <TextField \r\n            id=\"outlined-basic\" \r\n            label=\"New to do\" \r\n            variant=\"outlined\" \r\n            size=\"small\" \r\n            fullWidth={true} \r\n            type=\"text\" \r\n            value={newToDo} \r\n            onChange={e => handleNewToDo(e)} \r\n            onKeyPress={onKeyPress} \r\n            onKeyUp={e => e.key === \"Enter\" && setNewToDo('')} \r\n        />\r\n        )\r\n}\r\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const  Pagination = ({onPageNow, pageCount, activePage}) =>  {\n    const pageArr = new Array(pageCount).fill(1).map((e, i) => i + 1);\n    return (\n        <ButtonGroup  color=\"primary\" aria-label=\"contained button group\">            \n            <Button onClick={onPageNow} value=\"1\"><ArrowBackIcon /></Button>\n                {pageArr.map(page => <Button key={`item-${page}`} onClick={onPageNow} value={page} variant={ activePage === page &&  'contained'}>{page}</Button>)}\n            <Button onClick={onPageNow} value={pageArr.length}><ArrowForwardIcon /> </Button>\n        </ButtonGroup>\n    );\n};","import React, { useState } from 'react';\nimport { ListItemText , ListItem, ListItemIcon, ListItemSecondaryAction, IconButton, Checkbox, Input } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const ToDoListItem = ({task, onCheck, onDelete, onChange}) => {\n  const [chanher, setChanher] = useState(false);\n  const showInput = (e) => {\n    setChanher(!chanher)\n  }; \n\n return(\n <ListItem>\n      <ListItemIcon>\n        <Checkbox \n          color=\"primary\"  \n          onChange={onCheck} \n          checked={task.done} \n          value={task.id} \n        />\n      </ListItemIcon>\n      {chanher \n        ? (<Input \n            defaultValue={task.name}\n            autoFocus={true}\n            name={`${task.id}`}\n            onBlur={e => showInput(e)} \n            onKeyDown={e => e.key === \"Escape\" && setChanher(false)} \n            onKeyPress={onChange}\n            onKeyUp={e => e.key === \"Enter\" && setChanher(false)}\n          />) \n        : (<ListItemText  \n            primary={task.name}  \n            onClick={e => showInput(e)}\n          />)\n      }\n        \n        <ListItemText  primary={task.createdAt} />\n        <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete} value={task.id}>\n                      <DeleteIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n    </ListItem>\n   \n )   \n};","import React from 'react';\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nexport const ItemPerPageFilter = ({onChangeItemFilter, itemPerPage}) => {\n    return(\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={itemPerPage}\n          onChange={onChangeItemFilter}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n        </Select>\n    )\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    filterByButtons: [\n        {name: 'all', value: undefined},\n        {name: 'done', value: true},\n        {name: 'undone', value: false}\n    ],\n    filterBy: undefined,\n    orderValue: ['ASC', 'DESC'],\n    order: 'DESC'\n};\n\nexport const  filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        toggleOrder: (state, action) => {\n            state.order = action.payload;\n        },\n        toggleFilterBy: (state, action) => {\n            state.filterBy = action.payload;\n        }\n    }\n});\n\nexport const {toggleOrder, toggleFilterBy} = filterSlice.actions;\n\nexport const selectOrderValue = state => state.filter.orderValue;\nexport const selectFilterBy = state => state.filter.filterBy;\nexport const selectOrder = state => state.filter.order.toUpperCase();\nexport const selectFilterByButtons = state => state.filter.filterByButtons;\n\nexport default filterSlice.reducer;","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {selectFilterByButtons, selectFilterBy, toggleFilterBy } from '../features/filter/filterSlice';\n\n\nexport default function DoneSort() {\n    const filterByButtons = useSelector(selectFilterByButtons);\n    const filterBy = useSelector(selectFilterBy);\n    const dispatch = useDispatch();\n    return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n    {filterByButtons.map(button => <Button key={button.name} variant={ filterBy === button.value && \"contained\"} onClick={e => dispatch(toggleFilterBy(e.currentTarget.value))}  value={button.value}>{button.name}</Button> )}\n    </ButtonGroup>\n    )\n}\n","import React from 'react';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {selectOrder, selectOrderValue, toggleOrder} from '../features/filter/filterSlice';\r\n\r\nexport default function DateSort() {\r\n  const order = useSelector(selectOrder);\r\n  const orderValue = useSelector(selectOrderValue);\r\n  const dispatch = useDispatch();\r\n\r\n    return(<>\r\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n      {orderValue.map(item => <Button key={item} size=\"medium\" variant={ order === item && \"contained\"} onClick={e => dispatch(toggleOrder(e.currentTarget.value))} value={item}>{item}</Button>)}\r\n    </ButtonGroup>  \r\n      </>\r\n    );\r\n};","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { ItemPerPageFilter } from '../components/ItemPerPageFilter';\nimport DoneSort from \"../components/DoneSort\";\nimport DateSort from \"../components/DateSort\";\n\nexport const FilterPanel = ({onChangeItemFilter, itemPerPage}) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <DoneSort />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Sort by:</Typography>\n        <DateSort />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Page count</Typography>\n        <ItemPerPageFilter  onChangeItemFilter={onChangeItemFilter} itemPerPage={itemPerPage}/>\n      </Grid>\n    </Grid>\n  );\n}\n","import {createAsyncThunk,  createSlice } from '@reduxjs/toolkit';\nimport {instanceHeroku} from '../../instanceAxios';\n\nexport const fetchUser =  createAsyncThunk(\n    'user/fetchToken',\n    async (userData, thunkAPI) => { \n        const res = await instanceHeroku.post(`login`, userData);\n        return res.data\n    }\n);\n\nexport const userRegistration = createAsyncThunk(\n    'user/registration',\n    async (userData, thunkAPI) => {\n        const res = await instanceHeroku.post(`signup`, userData);\n        return res.data \n    });\n\nconst initialState = {\n    firstName: sessionStorage.firstName || '',\n    lastName: sessionStorage.lastName || '',\n    token: sessionStorage.token || '',\n    isLoading: true,\n    hasError: false\n}\n\nconst userSlice  = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        clearUserData: (state) => {\n            state.firstName = state.lastName = state.token = '';\n            state.isLoading = state.hasError = false;\n        }\n    },\n    extraReducers: {\n        [fetchUser.pending]: (state, action) => {\n            state.isLoading = false\n            state.hasError = false\n        },\n        [fetchUser.fulfilled]: (state, action) => {\n            state.token = action.payload.token;\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            sessionStorage.setItem('token', state.token);\n            sessionStorage.setItem('firstName', state.firstName);\n            sessionStorage.setItem('lastName', state.lastName);\n            state.isLoading = true;\n            state.hasError = false;\n        },\n        [fetchUser.rejected]: (state, action) => {\n            state.isLoading = false;\n            state.hasError = true;\n        },\n        [userRegistration.pending]: (state) => {\n            state.isLoading = false\n            state.hasError = false\n        },\n        [userRegistration.fulfilled]: (state, action) => {\n            state.token = action.payload.token;\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            sessionStorage.setItem('token', state.token);\n            sessionStorage.setItem('firstName', state.firstName);\n            sessionStorage.setItem('lastName', state.lastName);\n            state.isLoading = true;\n            state.hasError = false;\n        },\n        [userRegistration.rejected]: (state) => {\n            state.isLoading = false;\n            state.hasError = true;\n        }\n    }\n});\n\nexport const { clearUserData } = userSlice.actions;\n\nexport const selectToken = state => state.user.token;\nexport const selectFirstName = state => state.user.firstName;\nexport const selectLastName = state => state.user.lastName;\nexport const selectIsLoading = state => state.user.isLoading;\n\nexport default userSlice.reducer;","import React, {  useState, useEffect, useCallback} from  'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Grid, List, CircularProgress} from '@material-ui/core';\r\nimport { instanceHeroku } from '../instanceAxios';\r\nimport { CreateToDo }  from '../components/CreateToDo';\r\nimport { Pagination } from '../components/Pagination';\r\nimport { ToDoListItem } from '../components/ToDoListItem';\r\nimport { FilterPanel } from './FilterPanel';\r\nimport {selectOrder, selectFilterBy} from '../features/filter/filterSlice';\r\nimport {selectToken } from '../features/user/userSlice';\r\n\r\n\r\nexport const ToDoList = () => {\r\n  const [toDoList, setToDoList] = useState([]);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [itemPerPage, setItemPerPage] = useState(5);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const order = useSelector(selectOrder);\r\n  const token = useSelector(selectToken)\r\n  const filterBy = useSelector(selectFilterBy);\r\n\r\n  const getToDoList =  useCallback( async () => {\r\n      if(sessionStorage.token) {\r\n        const  {data: {pageCount, tasks}}  = await instanceHeroku.get('/tasks', {\r\n          params: {\r\n            filterBy: filterBy,\r\n            order: order,\r\n            page: activePage,\r\n            taskCount: itemPerPage\r\n          },\r\n          headers: {\r\n            'Authorization': token \r\n          }\r\n        });\r\n        setPageCount(pageCount);\r\n        setToDoList(tasks)\r\n      }\r\n      if(!sessionStorage.token) {\r\n        setPageCount(1);\r\n        setToDoList([])\r\n      }\r\n      \r\n      await setIsLoading(true);\r\n\r\n}, [order, filterBy, token, activePage, itemPerPage]);\r\n  \r\n  useEffect((token) => {getToDoList(token)}, [getToDoList]);\r\n\r\n  const createNewToDo = async (e) => {\r\n      if(e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceHeroku.post('/task', {name: e.target.value.trim(), done: false}, {headers: {\r\n          'Authorization': token \r\n        }});\r\n        getToDoList();\r\n      };\r\n  };\r\n\r\n  const changeTask = async (e) => {\r\n\r\n      if (e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceHeroku.patch(`/task/${e.target.name}`, {name : e.target.value});\r\n        getToDoList();\r\n      }; \r\n  };\r\n\r\n  const changeDoneStatus = async (e) => {\r\n      await instanceHeroku.patch(`/task/${e.target.value}`, {done: e.target.checked});\r\n      getToDoList();\r\n  };\r\n\r\n  const deleteToDoItem = async (e) => {\r\n      await instanceHeroku.delete(`/task/${e.currentTarget.value}`);\r\n      getToDoList();\r\n\r\n  };\r\n  \r\n  const clickOnPage = (e) => {\r\n    setActivePage(Number(e.currentTarget.value));\r\n  };\r\n\r\n  const changeItemPerPageFilter = (e) => {\r\n      setItemPerPage(e.target.value)\r\n  };\r\n\r\n\r\n  return(\r\n      <Container maxWidth=\"md\">\r\n          <Grid item pt={50}>\r\n          <CreateToDo onKeyPress={createNewToDo} />\r\n          </Grid>\r\n          <FilterPanel  \r\n              onChangeItemFilter={changeItemPerPageFilter}\r\n              itemPerPage={itemPerPage} />\r\n          <Grid item alignItems=\"center\" container xs={12}>\r\n              {isLoading && (pageCount > 1 && <Pagination onPageNow={clickOnPage} pageCount={pageCount} activePage={activePage}  />) }\r\n          </Grid>\r\n          <List>\r\n      {isLoading\r\n              ?  (toDoList.map(task => <ToDoListItem key={task.id} task={task} onCheck={changeDoneStatus} onDelete={deleteToDoItem} onChange={changeTask} />)) \r\n              :   <CircularProgress />}\r\n          </List>\r\n      </Container>\r\n  );\r\n};","import React from 'react';\nimport { useField } from 'formik';\nimport { TextField, Grid  } from '@material-ui/core';\n\nexport const InputAuth = ({ ...props }) => {\n    const [field, meta] = useField(props);\n    return(\n        <Grid item >\n        <TextField\n          fullWidth\n          margin='normal'\n          error={(meta.touched && meta.error) && true}\n          helperText={(meta.touched && meta.error) && meta.error}\n          variant=\"outlined\"\n          {...field}\n          {...props}\n        />\n        </Grid>\n    )\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    loginForm: true,\n    authStatus: false\n  };\n\n  export const authSlice = createSlice({\n      name:  'auth',\n      initialState,\n      reducers: {\n        toggleLoginForm: (state) => {\n            state.loginForm = !state.loginForm\n        },\n        toggleAuthStatus: (state, action) => {\n            state.authStatus = action.payload;\n        },\n        logOut: (state) =>  {\n          sessionStorage.clear();\n          state.authStatus = false;\n        }\n      }\n  });\n\nexport const { toggleLoginForm, toggleAuthStatus, logOut  } = authSlice.actions;\n\nexport const selectLoginForm = state => state.auth.loginForm;\nexport const selectAuthStatus = state => state.auth.authStatus;\n\nexport default authSlice.reducer;\n\n\n","import React from 'react';\nimport { Formik, Form  } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid  } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\nimport {useDispatch } from 'react-redux'\nimport { fetchUser } from '../features/user/userSlice';\nimport { toggleAuthStatus } from '../features/auth/authSlice';\n\n\n\nexport const LogIn = () => {\n    const dispatch = useDispatch();\n\n\n    return(\n        <Formik \n            initialValues={{\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                dispatch(fetchUser(values));\n                dispatch(toggleAuthStatus(true))\n                setSubmitting(false);\n            }}>\n            <Form>\n            <InputAuth name=\"email\" label=\"Email\"   />\n            <InputAuth name=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\"   />\n            <Grid item>\n            <Button \n                variant=\"contained\" \n                color=\"primary\" \n                type=\"submit\"\n                fullWidth\n                >Log in</Button>\n            </Grid>\n            </Form>\n        </Formik>\n    )\n};","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\nimport {useDispatch } from 'react-redux';\nimport { userRegistration } from '../features/user/userSlice';\nimport { toggleAuthStatus } from '../features/auth/authSlice';\n\nexport const SignUp = () => {\n  const dispatch = useDispatch();\n  return(\n        <Formik\n            initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                firstName: Yup.string().required('Required'),\n                lastName: Yup.string().required('Required'),\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')})\n            }\n            onSubmit={(values, { setSubmitting }) => {\n              dispatch(userRegistration(values));\n              dispatch(toggleAuthStatus(true))\n              setSubmitting(false);\n              }}>\n            <Form>\n              <InputAuth name=\"firstName\" label=\"First name\" />\n              <InputAuth name=\"lastName\" label=\"Last name\" />\n              <InputAuth name=\"email\" label=\"Email\" />\n              <InputAuth name=\"password\" label=\"Password\"  type=\"password\" autoComplete=\"current-password\" />\n              <Grid item >\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                type=\"submit\"\n                fullWidth \n                >Sign up</Button>\n              </Grid>\n\n            </Form>\n        </Formik>\n    );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { LogIn } from '../components/LogIn';\nimport { SignUp } from '../components/SignUp';\nimport { selectLoginForm } from '../features/auth/authSlice';\n\nexport const Auth = () => {\n  const loginForm = useSelector(selectLoginForm);\n\n    return(\n        <Grid container spacing={10} justify=\"center\"   alignItems=\"center\" >\n        <Grid item xs={5} >  \n        {loginForm ? <LogIn /> : <SignUp/>}\n        </Grid>\n    </Grid>\n    )\n};","import React from 'react';\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {toggleLoginForm, selectLoginForm,  logOut, selectAuthStatus} from '../features/auth/authSlice';\nimport {selectLastName, selectFirstName, clearUserData} from '../features/user/userSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport const NavBar = () => {\n  const LoginForm = useSelector(selectLoginForm);\n  const firstName = useSelector(selectFirstName);\n  const lastName = useSelector(selectLastName);\n  const authStatus = useSelector(selectAuthStatus)\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  return(\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n      <Toolbar>\n\n        <Typography variant=\"h6\" className={classes.title}>\n        To do list\n        </Typography>\n\n        {authStatus && (\n          <div><Typography variant=\"body2\" >\n          {`${firstName} ${lastName}`}\n          </Typography>\n          <Button color=\"inherit\" onClick={() => dispatch(logOut())}>Log Out</Button></div>\n        )}\n        {!authStatus && <Button color=\"inherit\" onClick={() => {dispatch(toggleLoginForm()); dispatch(clearUserData()) } }>{LoginForm ? 'Sign up' : 'Login'}</Button>}\n      </Toolbar>\n    </AppBar>\n    </div>\n\n  )\n};\n","import React, {  useLayoutEffect, useState } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { instanceHeroku } from './instanceAxios'; \r\nimport { Container, Snackbar } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { ToDoList } from './container/ToDoList';\r\nimport { Auth } from './container/Auth';\r\nimport { NavBar } from './components/NavBar';\r\nimport { selectAuthStatus, toggleAuthStatus } from './features/auth/authSlice';\r\nimport { selectIsLoading } from './features/user/userSlice';\r\n\r\n\r\nfunction App() {\r\n  const [error, setError] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const dispatch = useDispatch();\r\n  \r\n  instanceHeroku.interceptors.response.use(undefined, (error) =>  {\r\n    if( [422, 404, 400].includes(error.response?.status) ) {\r\n      setError(error.response.data)\r\n      setOpen(true);\r\n      console.log(error.response.data);\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    if(sessionStorage.getItem('token')) {\r\n      const exp = jwt.decode(sessionStorage.getItem('token').split(' ')[1])?.exp\r\n      instanceHeroku.defaults.headers = {'Authorization': sessionStorage.getItem('token')}\r\n      if(Date.now() > exp) dispatch(toggleAuthStatus(true))\r\n    }\r\n  });\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      {(authStatus && isLoading) && <ToDoList />}\r\n      {!(authStatus && isLoading) && <Auth />}\r\n      {error && (<Snackbar open={open} autoHideDuration={6000} onClose={handleClose} >\r\n                              <Alert severity=\"error\" onClose={handleClose} > \r\n                              <AlertTitle>{`Error ${error.statusCode}`}</AlertTitle>\r\n                              {error.message} \r\n                              </Alert>\r\n                            </Snackbar>)}       \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport  authReducer  from './auth/authSlice';\nimport filterSlice from './filter/filterSlice';\nimport userSlice from './user/userSlice';\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n        filter: filterSlice,\n        user: userSlice,\n    },\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './features/store';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\n\n\naxios.interceptors.request.use(request => {\n  return request;\n}, error =>{\n  return Promise.reject(error);\n});\n\n\n\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}