{"version":3,"sources":["instanceAxios.js","components/CreateToDo.js","components/Pagination.js","components/ToDoListItem.js","components/ItemPerPageFilter.js","features/filter/filterSlice.js","components/DoneSort.js","components/DateSort.js","container/FilterPanel.js","features/user/userSlice.js","container/ToDoList.js","components/InputAuth.js","features/auth/authSlice.js","components/LogIn.js","components/SignUp.js","container/Auth.js","components/NavBar.js","features/error/errorSlice.js","App.js","reportWebVitals.js","features/store.js","index.js"],"names":["instanceHeroku","axios","create","baseURL","process","CreateToDo","onKeyPress","useState","newToDo","setNewToDo","TextField","margin","id","label","variant","size","fullWidth","type","value","onChange","e","target","onKeyUp","key","Pagination","onPageNow","pageCount","activePage","pageArr","Array","fill","map","i","ButtonGroup","color","aria-label","Button","onClick","page","length","ToDoListItem","task","onCheck","onDelete","changeInput","setChangeInput","disab","setDisab","showInput","date","createdAt","match","time","replace","console","log","Grid","container","ListItem","item","xs","ListItemIcon","Checkbox","checked","done","Input","defaultValue","name","autoFocus","onBlur","onKeyDown","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","disabled","ItemPerPageFilter","onChangeItemFilter","itemPerPage","Select","labelId","MenuItem","filterSlice","createSlice","initialState","filterByButtons","filterBy","orderValue","order","reducers","toggleOrder","state","action","payload","changeFilterBy","actions","selectOrderValue","filter","selectFilterBy","selectOrder","toUpperCase","selectFilterByButtons","DoneSort","useSelector","dispatch","useDispatch","button","currentTarget","DateSort","useStyles","makeStyles","theme","root","flexGrow","paper","paddingTop","spacing","paddingBottom","palette","text","secondary","justifyContent","FilterPanel","classes","className","alignItems","Typography","fetchUser","createAsyncThunk","userData","thunkAPI","a","post","res","data","userRegistration","firstName","sessionStorage","lastName","token","isLoading","hasError","userSlice","clearUserData","extraReducers","pending","fulfilled","setItem","rejected","selectToken","user","selectFirstName","selectLastName","selectIsLoading","ToDoList","toDoList","setToDoList","setPageCount","setActivePage","setItemPerPage","setIsLoading","getToDoList","useCallback","get","params","taskCount","headers","tasks","useEffect","createNewToDo","trim","changeTask","patch","changeDoneStatus","deleteToDoItem","delete","Container","maxWidth","pt","Number","List","CircularProgress","InputAuth","props","useField","field","meta","error","touched","helperText","authSlice","loginForm","authStatus","toggleLoginForm","toggleAuthStatus","logOut","clear","selectLoginForm","auth","selectAuthStatus","LogIn","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","autoComplete","SignUp","Auth","justify","menuButton","marginRight","title","NavBar","LoginForm","AppBar","position","Toolbar","align","errorSlice","errorStatus","statusCode","errorMesage","errorStack","createError","message","closeError","selectErrorStatus","selectErrorStatusCode","selectErrorMesage","App","errorStatusCode","errorMessage","useLayoutEffect","getItem","exp","jwt","split","defaults","Date","now","Snackbar","open","autoHideDuration","onClose","event","reason","Alert","severity","AlertTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","authReducer","interceptors","request","use","Promise","reject","response","undefined","includes","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a623a0bc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const instanceHeroku = axios.create({\n    baseURL: process.env.REACT_APP_LINK\n})","import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport const  CreateToDo = ({onKeyPress}) =>  {\r\n    const [newToDo, setNewToDo] = useState('');\r\n        return (\r\n        <TextField\r\n            margin='normal'\r\n            id=\"outlined-basic\" \r\n            label=\"New to do\" \r\n            variant=\"outlined\" \r\n            size=\"small\" \r\n            fullWidth \r\n            type=\"text\" \r\n            value={newToDo} \r\n            onChange={e => setNewToDo(e.target.value)} \r\n            onKeyPress={onKeyPress} \r\n            onKeyUp={e => e.key === \"Enter\" && setNewToDo('')} \r\n        />\r\n        )\r\n    };\r\n","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const  Pagination = ({onPageNow, pageCount, activePage}) =>  {\n    const pageArr = new Array(pageCount).fill(1).map((e, i) => i + 1);\n    return (\n        <ButtonGroup  color=\"primary\" aria-label=\"contained button group\">            \n            <Button onClick={onPageNow} value=\"1\"><ArrowBackIcon /></Button>\n                {pageArr.map(page => <Button key={`item-${page}`} onClick={onPageNow} value={page} variant={ activePage === page &&  'contained'}>{page}</Button>)}\n            <Button onClick={onPageNow} value={pageArr.length}><ArrowForwardIcon /> </Button>\n        </ButtonGroup>\n    );\n};","import React, { useState } from 'react';\nimport { ListItemText , ListItem, ListItemIcon, ListItemSecondaryAction, IconButton, Checkbox, Input, Grid } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const ToDoListItem = ({task, onCheck, onDelete, onChange}) => {\n  const [changeInput, setChangeInput] = useState(false);\n  const [disab, setDisab] = useState(false);\n  const showInput = (e) => {\n    setChangeInput(!changeInput)\n  }; \n  const buttonDisabled = () => {\n    setDisab(true)\n  }\nconst date = task.createdAt.match(/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/)[0];\nconst time = task.createdAt.match(/T(((([0-1][0-9])|(2[0-3])):?[0-5][0-9]))/g)[0].replace('T', '');\nconsole.log(time);\n return(\n   <Grid container>\n    <ListItem>\n      <Grid item xs={1}>\n      <ListItemIcon>\n        <Checkbox \n          color=\"primary\"  \n          onChange={onCheck} \n          checked={task.done} \n          value={task.id} \n        />\n      </ListItemIcon>\n      </Grid>\n      <Grid item xs={8}>\n      {changeInput \n        ? (<Input\n            fullWidth\n            defaultValue={task.name}\n            autoFocus={true}\n            name={`${task.id}`}\n            onBlur={e => showInput(e)} \n            onKeyDown={e => e.key === \"Escape\" && setChangeInput(false)} \n            onKeyPress={onChange}\n            onKeyUp={e => e.key === \"Enter\" && setChangeInput(false)}\n          />) \n        : (<ListItemText  \n            primary={task.name}  \n            onClick={e => showInput(e)}\n          />)\n      }\n      </Grid>\n        <Grid item xs={2}>\n        <ListItemText  primary={`${time} ${date}`} />\n        </Grid>\n      <Grid item xs={1}>\n        <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" disabled={disab} aria-label=\"delete\" onClick={(e) => {onDelete(e); buttonDisabled()}} value={task.id}>\n                      <DeleteIcon />\n                    </IconButton>\n        </ListItemSecondaryAction>\n        </Grid>\n        </ListItem>\n   </Grid>\n      \n )   \n};","import React from 'react';\nimport { Select, MenuItem } from \"@material-ui/core\";\n\nexport const ItemPerPageFilter = ({onChangeItemFilter, itemPerPage}) => {\n    return(\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={itemPerPage}\n          onChange={onChangeItemFilter}\n        >\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={10}>10</MenuItem>\n          <MenuItem value={20}>20</MenuItem>\n        </Select>\n    )\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    filterByButtons: ['all', 'done', 'undone'],\n    filterBy: 'all',\n    orderValue: ['ASC', 'DESC'],\n    order: 'DESC'\n};\n\nexport const  filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        toggleOrder: (state, action) => {\n            state.order = action.payload;\n        },\n        changeFilterBy: (state, action) => {\n            state.filterBy = action.payload;\n        }\n    }\n});\n\nexport const {toggleOrder, changeFilterBy} = filterSlice.actions;\n\nexport const selectOrderValue = state => state.filter.orderValue;\nexport const selectFilterBy = state => state.filter.filterBy;\nexport const selectOrder = state => state.filter.order.toUpperCase();\nexport const selectFilterByButtons = state => state.filter.filterByButtons;\n\nexport default filterSlice.reducer;","import React from 'react';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {selectFilterByButtons, selectFilterBy, changeFilterBy } from '../features/filter/filterSlice';\n\n\nexport default function DoneSort() {\n    const filterByButtons = useSelector(selectFilterByButtons);\n    const filterBy = useSelector(selectFilterBy);\n    const dispatch = useDispatch();\n    return (\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n    {filterByButtons\n        .map(button => \n        <Button \n            key={button}\n            size=\"medium\"\n            variant={ filterBy === button && \"contained\"}\n            onClick={e => dispatch(changeFilterBy(e.currentTarget.value))}\n            value={button}\n            >{button}</Button> )}\n    </ButtonGroup>\n    )\n}\n","import React from 'react';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {selectOrder, selectOrderValue, toggleOrder} from '../features/filter/filterSlice';\r\n\r\nexport default function DateSort() {\r\n  const order = useSelector(selectOrder);\r\n  const orderValue = useSelector(selectOrderValue);\r\n  const dispatch = useDispatch();\r\n\r\n    return(<>\r\n    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n      {orderValue\r\n          .map(item => \r\n          <Button \r\n            key={item}\r\n            size=\"medium\"\r\n            variant={ order === item && \"contained\"}\r\n            onClick={e => dispatch(toggleOrder(e.currentTarget.value))}\r\n            value={item}\r\n            >{item}</Button>)}\r\n    </ButtonGroup>  \r\n      </>\r\n    );\r\n};","import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { ItemPerPageFilter } from '../components/ItemPerPageFilter';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DoneSort from \"../components/DoneSort\";\nimport DateSort from \"../components/DateSort\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n\n  },\n  paper: {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    justifyContent: 'space-between'\n  },\n}));\n\nexport const FilterPanel = ({onChangeItemFilter, itemPerPage}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.paper} >\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <DoneSort />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Sort by:</Typography>\n        <DateSort />\n      </Grid>\n      <Grid item xs={3} alignItems=\"center\" container>\n        <Typography variant=\"subtitle1\">Page count</Typography>\n        <ItemPerPageFilter  onChangeItemFilter={onChangeItemFilter} itemPerPage={itemPerPage}/>\n      </Grid>\n    </Grid>\n    </div>\n\n  );\n}\n","import {createAsyncThunk,  createSlice } from '@reduxjs/toolkit';\nimport {instanceHeroku} from '../../instanceAxios';\n\nexport const fetchUser =  createAsyncThunk(\n    'user/fetchToken',\n    async (userData, thunkAPI) => { \n        const res = await instanceHeroku.post(`login`, userData);\n        return res.data\n    }\n);\n\nexport const userRegistration = createAsyncThunk(\n    'user/registration',\n    async (userData, thunkAPI) => {\n        const res = await instanceHeroku.post(`signup`, userData);\n        return res.data \n    });\n\nconst initialState = {\n    firstName: sessionStorage.firstName || '',\n    lastName: sessionStorage.lastName || '',\n    token: sessionStorage.token || '',\n    isLoading: true,\n    hasError: false\n};\n\nconst userSlice  = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        clearUserData: (state) => {\n            state.firstName = state.lastName = state.token = '';\n            state.isLoading = state.hasError = false;\n        }\n    },\n    extraReducers: {\n        [fetchUser.pending]: (state, action) => {\n            state.isLoading = false\n            state.hasError = false\n        },\n        [fetchUser.fulfilled]: (state, action) => {\n            state.token = action.payload.token;\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            sessionStorage.setItem('token', state.token);\n            sessionStorage.setItem('firstName', state.firstName);\n            sessionStorage.setItem('lastName', state.lastName);\n            state.isLoading = true;\n            state.hasError = false;\n        },\n        [fetchUser.rejected]: (state, action) => {\n            state.isLoading = false;\n            state.hasError = true;\n        },\n        [userRegistration.pending]: (state) => {\n            state.isLoading = false\n            state.hasError = false\n        },\n        [userRegistration.fulfilled]: (state, action) => {\n            state.token = action.payload.token;\n            state.firstName = action.payload.firstName;\n            state.lastName = action.payload.lastName;\n            sessionStorage.setItem('token', state.token);\n            sessionStorage.setItem('firstName', state.firstName);\n            sessionStorage.setItem('lastName', state.lastName);\n            state.isLoading = true;\n            state.hasError = false;\n        },\n        [userRegistration.rejected]: (state) => {\n            state.isLoading = false;\n            state.hasError = true;\n        }\n    }\n});\n\nexport const { clearUserData } = userSlice.actions;\n\nexport const selectToken = state => state.user.token;\nexport const selectFirstName = state => state.user.firstName;\nexport const selectLastName = state => state.user.lastName;\nexport const selectIsLoading = state => state.user.isLoading;\n\nexport default userSlice.reducer;","import React, {  useState, useEffect, useCallback} from  'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Grid, List, CircularProgress} from '@material-ui/core';\r\nimport { instanceHeroku } from '../instanceAxios';\r\nimport { CreateToDo }  from '../components/CreateToDo';\r\nimport { Pagination } from '../components/Pagination';\r\nimport { ToDoListItem } from '../components/ToDoListItem';\r\nimport { FilterPanel } from './FilterPanel';\r\nimport {selectOrder, selectFilterBy} from '../features/filter/filterSlice';\r\nimport {selectToken } from '../features/user/userSlice';\r\n\r\n\r\nexport const ToDoList = () => {\r\n  const [toDoList, setToDoList] = useState([]);\r\n  const [pageCount, setPageCount] = useState(1);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [itemPerPage, setItemPerPage] = useState(5);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const order = useSelector(selectOrder);\r\n  const token = useSelector(selectToken)\r\n  const filterBy = useSelector(selectFilterBy);\r\n\r\n  const getToDoList =  useCallback( async () => {\r\n      if(sessionStorage.token) {\r\n        const  {data: {pageCount, tasks}}  = await instanceHeroku.get('/tasks', {\r\n          params: {\r\n            filterBy: filterBy,\r\n            order: order,\r\n            page: activePage,\r\n            taskCount: itemPerPage\r\n          },\r\n          headers: {\r\n            'Authorization': token \r\n          }\r\n        });\r\n        if(pageCount < activePage) {\r\n          setActivePage(1)\r\n        }\r\n        setPageCount(pageCount);\r\n        setToDoList(tasks)\r\n      }\r\n      if(!sessionStorage.token) {\r\n        setPageCount(1);\r\n        setToDoList([])\r\n      }\r\n      \r\n      await setIsLoading(true);\r\n\r\n  }, [order, filterBy, token, activePage, itemPerPage]);\r\n  \r\n  useEffect((token) => {getToDoList(token)}, [getToDoList]);\r\n\r\n  const createNewToDo = async (e) => {\r\n      if(e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceHeroku.post('/task', {name: e.target.value.trim(), done: false}, {headers: {\r\n          'Authorization': token \r\n        }});\r\n        getToDoList();\r\n      };\r\n  };\r\n\r\n  const changeTask = async (e) => {\r\n\r\n      if (e.key === \"Enter\" && e.target.value.trim()) {\r\n        await instanceHeroku.patch(`/task/${e.target.name}`, {name : e.target.value});\r\n        getToDoList();\r\n      }; \r\n  };\r\n\r\n  const changeDoneStatus = async (e) => {\r\n      await instanceHeroku.patch(`/task/${e.target.value}`, {done: e.target.checked});\r\n      getToDoList();\r\n  };\r\n\r\n  const deleteToDoItem = async (e) => {\r\n      await instanceHeroku.delete(`/task/${e.currentTarget.value}`);\r\n      getToDoList();\r\n  };\r\n  \r\n  const clickOnPage = (e) => {\r\n    setActivePage(Number(e.currentTarget.value));\r\n  };\r\n\r\n  const changeItemPerPageFilter = (e) => {\r\n      setItemPerPage(e.target.value)\r\n  };\r\n\r\n  return(\r\n      <Container maxWidth=\"md\">\r\n          <Grid item pt={50}>\r\n          <CreateToDo onKeyPress={createNewToDo} />\r\n          </Grid>\r\n          <FilterPanel  \r\n              onChangeItemFilter={changeItemPerPageFilter}\r\n              itemPerPage={itemPerPage} />\r\n          <Grid item alignItems=\"center\" container xs={12}>\r\n              {isLoading && (pageCount > 1 && <Pagination onPageNow={clickOnPage} pageCount={pageCount} activePage={activePage}  />) }\r\n          </Grid>\r\n          <List>\r\n      {isLoading\r\n              ?  (toDoList.map(task => <ToDoListItem key={task.id} task={task} onCheck={changeDoneStatus} onDelete={deleteToDoItem} onChange={changeTask} />)) \r\n              :   <CircularProgress />}\r\n          </List>\r\n      </Container>\r\n  );\r\n};","import React from 'react';\nimport { useField } from 'formik';\nimport { TextField, Grid  } from '@material-ui/core';\n\nexport const InputAuth = ({ ...props }) => {\n    const [field, meta] = useField(props);\n    return(\n        <Grid item >\n        <TextField\n          fullWidth\n          margin='normal'\n          error={(meta.touched && meta.error) && true}\n          helperText={(meta.touched && meta.error) && meta.error}\n          variant=\"outlined\"\n          {...field}\n          {...props}\n        />\n        </Grid>\n    )\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    loginForm: true,\n    authStatus: false\n  };\n\n  export const authSlice = createSlice({\n      name:  'auth',\n      initialState,\n      reducers: {\n        toggleLoginForm: (state) => {\n            state.loginForm = !state.loginForm\n        },\n        toggleAuthStatus: (state, action) => {\n            state.authStatus = action.payload;\n        },\n        logOut: (state) =>  {\n          sessionStorage.clear();\n          state.authStatus = false;\n        }\n      }\n  });\n\nexport const { toggleLoginForm, toggleAuthStatus, logOut  } = authSlice.actions;\n\nexport const selectLoginForm = state => state.auth.loginForm;\nexport const selectAuthStatus = state => state.auth.authStatus;\n\nexport default authSlice.reducer;","import React from 'react';\nimport { Formik, Form  } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid  } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\nimport {useDispatch } from 'react-redux'\nimport { fetchUser } from '../features/user/userSlice';\nimport { toggleAuthStatus } from '../features/auth/authSlice';\n\n\n\nexport const LogIn = () => {\n    const dispatch = useDispatch();\n\n\n    return(\n        <Formik \n            initialValues={{\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                dispatch(fetchUser(values));\n                dispatch(toggleAuthStatus(true))\n                setSubmitting(false);\n            }}>\n            <Form>\n            <InputAuth name=\"email\" label=\"Email\"   />\n            <InputAuth name=\"password\" label=\"Password\" type=\"password\" autoComplete=\"current-password\"   />\n            <Grid item>\n            <Button \n                variant=\"contained\" \n                color=\"primary\" \n                type=\"submit\"\n                fullWidth\n                >Log in</Button>\n            </Grid>\n            </Form>\n        </Formik>\n    )\n};","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button, Grid } from '@material-ui/core';\nimport { InputAuth } from './InputAuth';\nimport {useDispatch } from 'react-redux';\nimport { userRegistration } from '../features/user/userSlice';\nimport { toggleAuthStatus } from '../features/auth/authSlice';\n\nexport const SignUp = () => {\n  const dispatch = useDispatch();\n  return(\n        <Formik\n            initialValues={{\n                firstName: '',\n                lastName: '',\n                email: '',\n                password: ''\n            }}\n            validationSchema={Yup.object({\n                firstName: Yup.string().required('Required'),\n                lastName: Yup.string().required('Required'),\n                email: Yup.string().email('Invalid email address').required('Required'),\n                password: Yup.string().min(8, 'Must be 8 characters or more').required('Required')})\n            }\n            onSubmit={(values, { setSubmitting }) => {\n              dispatch(userRegistration(values));\n              dispatch(toggleAuthStatus(true))\n              setSubmitting(false);\n              }}>\n            <Form>\n              <InputAuth name=\"firstName\" label=\"First name\" />\n              <InputAuth name=\"lastName\" label=\"Last name\" />\n              <InputAuth name=\"email\" label=\"Email\" />\n              <InputAuth name=\"password\" label=\"Password\"  type=\"password\" autoComplete=\"current-password\" />\n              <Grid item >\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                type=\"submit\"\n                fullWidth \n                >Sign up</Button>\n              </Grid>\n\n            </Form>\n        </Formik>\n    );\n};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { LogIn } from '../components/LogIn';\nimport { SignUp } from '../components/SignUp';\nimport { selectLoginForm } from '../features/auth/authSlice';\n\nexport const Auth = () => {\n  const loginForm = useSelector(selectLoginForm);\n\n    return(\n        <Grid container spacing={10} justify=\"center\"   alignItems=\"center\" >\n        <Grid item xs={5} >  \n        {loginForm ? <LogIn /> : <SignUp/>}\n        </Grid>\n    </Grid>\n    )\n};","import React from 'react';\nimport { AppBar, Toolbar, Button, Typography, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {toggleLoginForm, selectLoginForm,  logOut, selectAuthStatus} from '../features/auth/authSlice';\nimport {selectLastName, selectFirstName, clearUserData, selectIsLoading} from '../features/user/userSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    justifyContent: 'space-between'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport const NavBar = () => {\n  const LoginForm = useSelector(selectLoginForm);\n  const firstName = useSelector(selectFirstName);\n  const lastName = useSelector(selectLastName);\n  const authStatus = useSelector(selectAuthStatus)\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  return(\n    <div className={classes.root}>\n      \n      <AppBar position=\"static\">\n      <Toolbar>\n      <Grid container alignItems=\"center\"   justify=\"space-between\">\n        <Grid item xs={3}>\n        <Typography variant=\"h6\" className={classes.title}>\n        To do list\n        </Typography>\n        </Grid>\n        {(authStatus && isLoading) && (<>\n          <Grid item xs={8}>\n          <Typography variant=\"body1\" align='right'>\n          {`${firstName} ${lastName}`}\n          </Typography>\n          </Grid>\n          <Grid item xs={1}>\n           <Button color=\"inherit\" onClick={() => dispatch(logOut())}>Log Out</Button>\n          </Grid>\n         </>\n        )}\n        <Grid item xs={1}>\n        {!(authStatus && isLoading) && <Button color=\"inherit\" onClick={() => {dispatch(toggleLoginForm()); dispatch(clearUserData()) } }>{LoginForm ? 'Sign up' : 'Login'}</Button>}\n        </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n    </div>\n\n  )\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n    errorStatus: false,\n    statusCode: '',\n    errorMesage: '',\n    errorStack: {}\n}\n\nconst errorSlice = createSlice({\n    name: 'error',\n    initialState,\n    reducers: {\n        createError: (state, action) =>{\n            state.statusCode = action.payload.statusCode;\n            state.errorMesage = action.payload.message;\n            state.errorStatus = true;\n            console.log('createError');\n        },\n        closeError: (state, action) => {\n            if(action.payload === 'clickaway') return;\n            state.errorStatus = false;\n            state.statusCode = state.errorMesage = '';\n            state.errorStack = {};\n        }\n    }\n});\n\nexport const { createError, closeError } = errorSlice.actions;\n\nexport const selectErrorStatus = state => state.error.errorStatus;\nexport const selectErrorStatusCode = state => state.error.statusCode;\nexport const selectErrorMesage = state => state.error.errorMesage;\nexport const selectErrorStack = state => state.error.errorStack;\n\nexport default errorSlice.reducer;","import React, {  useLayoutEffect } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport { instanceHeroku } from './instanceAxios'; \r\nimport { Container, Snackbar } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { ToDoList } from './container/ToDoList';\r\nimport { Auth } from './container/Auth';\r\nimport { NavBar } from './components/NavBar';\r\nimport { selectAuthStatus, toggleAuthStatus } from './features/auth/authSlice';\r\nimport { selectIsLoading } from './features/user/userSlice';\r\nimport { closeError, selectErrorStatus, selectErrorStatusCode, selectErrorMesage, } from './features/error/errorSlice';\r\n\r\nfunction App() {\r\n  const authStatus = useSelector(selectAuthStatus);\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const errorStatus = useSelector(selectErrorStatus);\r\n  const errorStatusCode = useSelector(selectErrorStatusCode);\r\n  const errorMessage = useSelector(selectErrorMesage);\r\n  const dispatch = useDispatch();\r\n\r\n  useLayoutEffect(() => {\r\n    if(sessionStorage.getItem('token')) {\r\n      const exp = jwt.decode(sessionStorage.getItem('token').split(' ')[1])?.exp\r\n      instanceHeroku.defaults.headers = {'Authorization': sessionStorage.getItem('token')}\r\n      if(Date.now() > exp) dispatch(toggleAuthStatus(true))\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      {(authStatus && isLoading) && <ToDoList />}\r\n      {!(authStatus && isLoading) && <Auth />}\r\n      <Snackbar\r\n        open={errorStatus}\r\n        autoHideDuration={6000} \r\n        onClose={(event, reason)=> dispatch(closeError(reason))}>\r\n          <Alert\r\n            severity=\"error\" \r\n            onClose={(event, reason)=> dispatch(closeError(reason))}> \r\n            <AlertTitle>{`Error ${errorStatusCode}`}</AlertTitle>\r\n            {errorMessage} \r\n          </Alert>\r\n        </Snackbar>     \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport  authReducer  from './auth/authSlice';\nimport filterSlice from './filter/filterSlice';\nimport userSlice from './user/userSlice';\nimport errorSlice from './error/errorSlice';\n\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n        filter: filterSlice,\n        user: userSlice,\n        error: errorSlice\n    },\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './features/store';\nimport { Provider } from 'react-redux';\nimport {instanceHeroku} from './instanceAxios';\nimport {createError } from './features/error/errorSlice';\nimport {logOut} from './features/auth/authSlice';\n\n\ninstanceHeroku.interceptors.request.use(request => {\n  return request;\n}, error =>{\n  return Promise.reject(error);\n});\n\ninstanceHeroku.interceptors.response.use(undefined, (error) =>  {\n  if([422, 404, 400].includes(error.response?.status)){\n    store.dispatch(createError(error.response.data));\n    if(error.response.data.message === 'Invalid token') store.dispatch(logOut());\n    console.log(`interceptors:`, error.response.data);\n  } \n  return Promise.reject(error);\n});\n\n\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}